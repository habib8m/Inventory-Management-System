
                                                  ===============================SPAC=============================

create or replace package "INVENTORY_REPORT_SONALI" as 
    procedure item_damage_report_4_5_8(p_project number,p_ware_id number,p_item_code number, 
                                            p_from_date date,p_to_date date,p_org_id number); 
    procedure item_shortage_report_4_5_8(p_project number,p_warehouse_code number,p_item_code number, 
                                            p_from_date date,p_to_date date,p_org_id number); 
    procedure item_opening_report_4_5_8(p_project number,p_warehouse_code number,p_item_code number, 
                                            p_from_date date,p_to_date date,p_org_id number); 
    procedure item_receive_report(p_project number,p_warehouse_id number,p_item_code number,p_from_date date,p_to_date date,p_org_id number); 
    procedure item_transfer_report(p_project number,p_warehouse_from number,p_warehouse_to number,p_item_code number,p_from_date date,p_to_date date,p_org_id number); 
end "INVENTORY_REPORT_SONALI";
/


                                                  ===============================BODY=============================

create or replace package body "INVENTORY_REPORT_SONALI" as 
    procedure item_damage_report_4_5_8(p_project number,p_ware_id number,p_item_code number,p_from_date date, 
                                        p_to_date date,p_org_id number) 
IS 
    v_sl NUMBER          := 0; 
     v_tot_amt NUMBER     := 0; 
     v_qty    NUMBER     := 0; 
     v_qty_g  NUMBER     := 0; 
     v_exp    NUMBER     := 0; 
     v_exp_g  NUMBER     := 0; 
     v_usd    NUMBER     := 0; 
     v_usd_g  NUMBER     := 0; 
     v_bdt    NUMBER     := 0; 
     v_bdt_g  NUMBER     := 0; 
        v_count NUMBER   := 0; 
 
BEGIN 
    report_utils.header_without_boarder (p_project, 'Item Damage Report '); 
    HTP.p ( 
           '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
        || HTF.escape_sc (P_from_date) 
        || ' To ' 
        || HTF.escape_sc (P_To_date) 
        || '</h4>'); 
 
 
    HTP.p ('<table style="width:100%"> 
    <tr>     
			<th style="width:1%">SL</th> 
			<th style="width:10%">Item Name</th>  
            <th style="width:5%">Damage Qty</th> 
			<th style="width:4%">Price</th> 
            <th style="width:4%">Amount</th>  
            <th style="width:6%">Warehouse</th>   
    </tr>'); 
 
    FOR r in (  SELECT gi.code_desc      item_name, 
                         gb.code_desc      b_unit, 
                         gi.other_desc     item_code, 
                          
                         SUM (sd.qty)      qty, 
                         gwf.code_desc     warehouse, 
                         sum(sd.total) total, 
                         sum(sd.rate) rate 
                    FROM g_inv_codes gi 
                         JOIN g_inv_codes gb ON (gi.b_code = gb.code) 
                         JOIN sp_store_d sd ON (sd.item_code = gi.code) 
                         JOIN sp_store_m sm ON (sm.trans_id = sd.trans_id) 
                         JOIN g_uni_codes gwf ON (sm.depot_id = gwf.code) 
                   WHERE gi.org_id = p_org_id AND sm.trans_type = 'DM' 
                       and sm.delete_status != 1 
                       and sm.project_code = nvl(p_project,sm.project_code) 
                   and sd.item_code = nvl(p_item_code,sd.item_code) 
                   and sm.trans_date between p_from_date and p_to_date 
                   and sm.depot_id = nvl(p_ware_id,sm.depot_id) 
                GROUP BY gi.code_desc, 
                         gb.code_desc, 
                         gi.other_desc, 
                         gi.packing, 
                         gwf.code_desc) 
    LOOP 
    -- v_sl := 0; 
 
     
        v_sl := v_sl + 1; 
        v_tot_amt := v_tot_amt + nvl(r.total,0); 
        HTP.p ( 
               '<tr> 
              
                <td style="text-align: center">' 
            || HTF.escape_sc (v_sl) 
            || '</td> 
                <td style="text-align: Left">' 
            || HTF.escape_sc (r.item_name) 
            || '</td> 
                 
                <td style="text-align: center">' 
            || HTF.escape_sc (r.qty) 
            || '</td> 
                <td style="text-align: center">' 
            || HTF.escape_sc (r.rate) 
            || '</td> 
                <td style="text-align: right">' 
            || HTF.escape_sc (to_char(r.total,'99,99,999.00')) 
            || '</td> 
                <td style="text-align: center">' 
            || HTF.escape_sc (r.warehouse) 
            || '</td> 
 
           </tr>' 
        ); 
         
 
    END LOOP; 
 
    HTP.p ( 
        '<tr> 
                <td colspan="2" style="text-align: right;"><b>Total</b> :</td> 
               <td><b>' 
        || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
            || '</b></td> 
 
             <td><b>' 
        || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
            || '</b> </td> 
 
              <td style="text-align:right;"><b>' 
        || HTF.escape_sc (TO_CHAR (v_tot_amt, '99,99,999.99')) 
            || '</b> 
                </td> 
 
              <td style="text-align:right;"><b>' 
        || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
            || ' 
             
        </tr>'); 
    HTP.p ('</table>'); 
--report_utils.footer; 
END; 

--*****************************

     procedure item_shortage_report_4_5_8(p_project number,p_warehouse_code number,p_item_code number,p_from_date date, 
                                        p_to_date date,p_org_id number) 
    IS 
        v_sl NUMBER          := 0; 
         v_tot_amt NUMBER     := 0; 
         v_qty    NUMBER     := 0; 
         v_qty_g  NUMBER     := 0; 
         v_exp    NUMBER     := 0; 
         v_exp_g  NUMBER     := 0; 
         v_usd    NUMBER     := 0; 
         v_usd_g  NUMBER     := 0; 
         v_bdt    NUMBER     := 0; 
         v_bdt_g  NUMBER     := 0; 
            v_count NUMBER   := 0; 
 
    BEGIN 
        report_utils.header_without_boarder (p_project, 'Item Shortage Report '); 
        HTP.p ( 
               '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
            || HTF.escape_sc (P_from_date) 
            || ' To ' 
            || HTF.escape_sc (P_To_date) 
            || '</h4>'); 
 
 
        HTP.p ('<table style="width:100%"> 
        <tr>     
    			<th style="width:1%">SL</th> 
    			<th style="width:10%">Item Name</th>  
                <th style="width:5%">Shortage Qty</th> 
    			<th style="width:4%">Price</th> 
                <th style="width:4%">Amount</th>  
                <th style="width:6%">Warehouse</th>   
        </tr>'); 
 
        FOR r in (  SELECT gi.code_desc      item_name, 
                             gb.code_desc      b_unit, 
                             gi.other_desc     item_code, 
                             SUM (sd.qty)      qty, 
                             gwf.code_desc     warehouse, 
                             sum(sd.total) total, 
                             sum(sd.rate) rate 
                        FROM g_inv_codes gi 
                             JOIN g_inv_codes gb ON (gi.b_code = gb.code) 
                             JOIN sp_store_d sd ON (sd.item_code = gi.code) 
                             JOIN sp_store_m sm ON (sm.trans_id = sd.trans_id) 
                             JOIN g_uni_codes gwf ON (sm.depot_id = gwf.code) 
                       WHERE gi.org_id = p_org_id AND sm.trans_type = 'SH' 
                       and sm.delete_status != 1 
                       and sm.project_code = nvl(p_project,sm.project_code) 
                       and sd.item_code = nvl(p_item_code,sd.item_code) 
                       and sm.trans_date between p_from_date and p_to_date 
                       and sm.depot_id = nvl(p_warehouse_code,sm.depot_id) 
                    GROUP BY gi.code_desc, 
                             gb.code_desc, 
                             gi.other_desc, 
                             gi.packing, 
                             gwf.code_desc) 
        LOOP 
        -- v_sl := 0; 
 
         
            v_sl := v_sl + 1; 
            v_tot_amt := v_tot_amt + nvl(r.total,0); 
            HTP.p ( 
                   '<tr> 
                  
                    <td style="text-align: center">' 
                || HTF.escape_sc (v_sl) 
                || '</td> 
                    <td style="text-align: Left">' 
                || HTF.escape_sc (r.item_name) 
                || '</td> 
                     
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.qty) 
                || '</td> 
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.rate) 
                || '</td> 
                    <td style="text-align: right">' 
                || HTF.escape_sc (to_char(r.total,'99,99,999.00')) 
                || '</td> 
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.warehouse) 
                || '</td> 
 
               </tr>' 
            ); 
             
 
        END LOOP; 
 
        HTP.p ( 
            '<tr> 
                    <td colspan="2" style="text-align: right;"><b>Total</b> :</td> 
                   <td><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || '</b></td> 
 
                 <td><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || '</b> </td> 
 
                  <td style="text-align:right;"><b>' 
            || HTF.escape_sc (TO_CHAR (v_tot_amt, '99,99,999.99')) 
                || '</b> 
                    </td> 
 
                  <td style="text-align:right;"><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || ' 
                 
            </tr>'); 
        HTP.p ('</table>'); 
    --report_utils.footer; 
    END; 

--****************************
 
    procedure item_opening_report_4_5_8(p_project number,p_warehouse_code number,p_item_code number,p_from_date date, 
                                        p_to_date date,p_org_id number) 
    IS 
        v_sl NUMBER          := 0; 
         v_tot_amt NUMBER     := 0; 
         v_qty    NUMBER     := 0; 
         v_qty_g  NUMBER     := 0; 
         v_exp    NUMBER     := 0; 
         v_exp_g  NUMBER     := 0; 
         v_usd    NUMBER     := 0; 
         v_usd_g  NUMBER     := 0; 
         v_bdt    NUMBER     := 0; 
         v_bdt_g  NUMBER     := 0; 
            v_count NUMBER   := 0; 
 
    BEGIN 
        report_utils.header_without_boarder (p_project, 'Item Opening Report '); 
        HTP.p ( 
               '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
            || HTF.escape_sc (P_from_date) 
            || ' To ' 
            || HTF.escape_sc (P_To_date) 
            || '</h4>'); 
 
 
        HTP.p ('<table style="width:100%"> 
        <tr>     
    			<th style="width:1%">SL</th> 
    			<th style="width:10%">Item Name</th>  
                <th style="width:5%">Opening Qty</th> 
    			<th style="width:4%">Price</th> 
                <th style="width:4%">Amount</th>  
                <th style="width:6%">Warehouse</th>   
        </tr>'); 
 
        FOR r in (  SELECT gi.code_desc      item_name, 
                             SUM (sd.qty)      qty, 
                             gwf.code_desc     warehouse, 
                             sum(sd.total) total, 
                             sum(sd.rate) rate 
                        FROM g_inv_codes gi 
                             JOIN sp_store_d sd ON (sd.item_code = gi.code) 
                             JOIN sp_store_m sm ON (sm.trans_id = sd.trans_id) 
                             JOIN g_uni_codes gwf ON (sm.depot_id = gwf.code) 
                       WHERE gi.org_id = p_org_id AND sm.trans_type = 'OP' 
                       and sm.delete_status != 1 
                       and sm.project_code = nvl(p_project,sm.project_code) 
                       and sd.item_code = nvl(p_item_code,sd.item_code) 
                       and sm.trans_date between p_from_date and p_to_date 
                       and sm.depot_id = nvl(p_warehouse_code,sm.depot_id) 
                    GROUP BY gi.code_desc, 
                             gi.other_desc, 
                             gi.packing, 
                             gwf.code_desc) 
        LOOP 
        -- v_sl := 0; 
 
         
            v_sl := v_sl + 1; 
            v_tot_amt := v_tot_amt + nvl(r.total,0); 
            HTP.p ( 
                   '<tr> 
                  
                    <td style="text-align: center">' 
                || HTF.escape_sc (v_sl) 
                || '</td> 
                    <td style="text-align: Left">' 
                || HTF.escape_sc (r.item_name) 
                || '</td> 
                     
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.qty) 
                || '</td> 
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.rate) 
                || '</td> 
                    <td style="text-align: right">' 
                || HTF.escape_sc (to_char(r.total,'99,99,999.00')) 
                || '</td> 
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.warehouse) 
                || '</td> 
 
               </tr>' 
            ); 
             
 
        END LOOP; 
 
        HTP.p ( 
            '<tr> 
                    <td colspan="2" style="text-align: right;"><b>Total</b> :</td> 
                   <td><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || '</b></td> 
 
                 <td><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || '</b> </td> 
 
                  <td style="text-align:right;"><b>' 
            || HTF.escape_sc (TO_CHAR (v_tot_amt, '99,99,999.99')) 
                || '</b> 
                    </td> 
 
                  <td style="text-align:right;"><b>' 
            || HTF.escape_sc (TO_CHAR (null, '99,99,999.99')) 
                || ' 
                 
            </tr>'); 
        HTP.p ('</table>'); 
    --report_utils.footer; 
    END; 

--******************************

    procedure item_receive_report(p_project number,p_warehouse_id number,p_item_code number,p_from_date date,p_to_date date,p_org_id number) 
    IS  
    v_sl NUMBER         := 0; 
     v_tot_sl NUMBER     := 0; 
     v_qty    NUMBER     := 0; 
     v_qty_g  NUMBER     := 0; 
     v_exp    NUMBER     := 0; 
     v_exp_g  NUMBER     := 0; 
     v_usd    NUMBER     := 0; 
     v_usd_g  NUMBER     := 0; 
     v_bdt    NUMBER     := 0; 
     v_bdt_g  NUMBER     := 0; 
        v_count NUMBER      := 0; 
 
    BEGIN 
        report_utils.header_without_boarder (p_project, 'Receive Report '); 
        HTP.p ( 
               '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
            || HTF.escape_sc (P_from_date) 
            || ' To ' 
            || HTF.escape_sc (P_To_date) 
            || '</h4>'); 
 
 
        HTP.p ('<table style="width:100%"> 
        <tr> 
                <th style="width:1%">SL</th> 
    			<th style="width:10%">Item Name</th>  
    			<th style="width:5%">Receive Qty</th> 
    			<th style="width:6%">Warehoue From</th> 
    			<th style="width:6%">Warehouse To</th> 
    			<th style="width:6%">Remarks</th> 
        </tr>'); 
         
        v_sl := 0; 
        v_qty := 0; 
        FOR r in (SELECT gi.code_desc||' -'||gi.packing                    item_name, 
                               gb.code_desc                    b_unit, 
                               gi.other_desc                   item_code, 
                                sum(sd.qty) qty, 
                               gwf.code_desc                   warehouse_from, 
                               gwt.code_desc warehouse_to 
                          FROM g_inv_codes  gi 
                               JOIN g_inv_codes gb ON (gi.b_code = gb.code) 
                               JOIN sp_store_d sd ON (sd.item_code = gi.code) 
                               JOIN sp_store_m sm ON (sm.trans_id = sd.trans_id) 
                               JOIN g_uni_codes gwf ON (sm.depot_from = gwf.code) 
                               JOIN g_uni_codes gwt ON (sm.depot_to = gwt.code) 
                         WHERE gi.org_id = p_org_id 
                         and sm.trans_type = 'STR' 
                       and sm.delete_status != 1 
                       and sm.project_code = nvl(p_project,sm.project_code) 
                        --  and sm.depot_from = nvl(p_warehouse_from,sm.depot_from) 
                        --  and sm.depot_to = nvl(p_warehouse_to,sm.depot_to) 
                         and sd.item_code = nvl(p_item_code,sd.item_code) 
                         and sm.trans_date between p_from_date and p_to_date 
                         group by gi.code_desc ,gb.code_desc, 
                                 gi.other_desc,gi.packing, 
                                 gwf.code_desc, gwt.code_desc) 
        LOOP 
            v_sl := v_sl + 1; 
            -- v_bdt := i.amount; 
            v_qty := v_qty + nvl(r.qty,0); 
            -- v_bdt_g := v_bdt + NVL (v_bdt_g, 0); 
 
            HTP.p ( 
                   '<tr> 
                 <td style="text-align: CENTER">' 
                || HTF.escape_sc (v_sl) 
                || '</td> 
                    <td style="text-align: Left">' 
                || HTF.escape_sc (r.item_name) 
                || '</td> 
                    <td style="text-align: CENTER">' 
                || HTF.escape_sc (r.qty) 
                || '</td> 
                    <td style="text-align: CENTER">' 
                || HTF.escape_sc (r.warehouse_from) 
                || '</td> 
                    <td style="text-align: CENTER">' 
                || HTF.escape_sc (r.warehouse_to) 
                || '</td> 
                    <td style="text-align: CENTER">' 
                || HTF.escape_sc (null) 
                || '</td> 
                    <tr>'); 
        END LOOP; 

      HTP.p ( 
            '<tr> 
                    <td colspan="2" style="text-align: right;"><b>Total</b> :</td> 
                   <td><b>' 
            || HTF.escape_sc (v_qty) 
                || '</b></td>' 
 
                || '<td><b>' 
 
                ||  '<td><b> 
                    </b></td> 
                 
            </tr>'); 
 
        HTP.p ('</table>'); 
    END; 

--******************************

    procedure item_transfer_report(p_project number,p_warehouse_from number,p_warehouse_to number,p_item_code number,p_from_date date,p_to_date date,p_org_id number) 
    IS 
        v_sl NUMBER         := 0; 
         v_tot_sl NUMBER     := 0; 
         v_qty    NUMBER     := 0; 
         v_qty_g  NUMBER     := 0; 
         v_exp    NUMBER     := 0; 
         v_exp_g  NUMBER     := 0; 
         v_usd    NUMBER     := 0; 
         v_usd_g  NUMBER     := 0; 
         v_bdt    NUMBER     := 0; 
         v_bdt_g  NUMBER     := 0; 
            v_count NUMBER   := 0; 
 
    BEGIN 
        report_utils.header_without_boarder (p_project, 'Transfer Report '); 
        HTP.p ( 
               '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
            || HTF.escape_sc (P_from_date) 
            || ' To ' 
            || HTF.escape_sc (P_To_date) 
            || '</h4>'); 
 
 
        HTP.p ('<table style="width:100%"> 
        <tr>     
    			<th style="width:2%">SL</th> 
    			<th style="width:10%">Item Name</th>  
                <th style="width:5%">Transfer Qty</th> 
    			<th style="width:8%">Warehouse From</th> 
                <th style="width:8%">Warehouse To</th>   
        </tr>'); 
 
        FOR r in (SELECT gi.code_desc||' -'||gi.packing                    item_name, 
                               gb.code_desc                    b_unit, 
                               gi.other_desc                   item_code, 
                                sum(sd.qty) qty, 
                               gwf.code_desc                   warehouse_from, 
                               gwt.code_desc warehouse_to 
                          FROM g_inv_codes  gi 
                               JOIN g_inv_codes gb ON (gi.b_code = gb.code) 
                               JOIN sp_store_d sd ON (sd.item_code = gi.code) 
                               JOIN sp_store_m sm ON (sm.trans_id = sd.trans_id) 
                               JOIN g_uni_codes gwf ON (sm.depot_from = gwf.code) 
                               JOIN g_uni_codes gwt ON (sm.depot_to = gwt.code) 
                         WHERE gi.org_id = p_org_id 
                         and sm.trans_type = 'ST' 
                       and sm.delete_status != 1 
                       and sm.project_code = nvl(p_project,sm.project_code) 
                         and sm.depot_from = nvl(p_warehouse_from,sm.depot_from) 
                         and sm.depot_to = nvl(p_warehouse_to,sm.depot_to) 
                         and sd.item_code = nvl(p_item_code,sd.item_code) 
                         and sm.trans_date between p_from_date and p_to_date 
                         group by gi.code_desc ,gb.code_desc, 
                                 gi.other_desc,gi.packing, 
                                 gwf.code_desc, gwt.code_desc 
                        ) 
        LOOP 
 
            HTP.p ( 
                   '<tr> 
                  
                    <td style="text-align: center">' 
                || HTF.escape_sc (v_sl) 
                || '</td> 
                    <td style="text-align: left">' 
                || HTF.escape_sc (r.item_name) 
                || '</td> 
                   <td style="text-align: CENTER">' 
                || HTF.escape_sc (r.qty) 
                || '</td> 
                    <td style="text-align: center">' 
                || HTF.escape_sc (r.warehouse_from) 
                || '</td> 
                   <td style="text-align: center">' 
                || HTF.escape_sc (r.warehouse_to) 
                || '</td> 
                    <tr>'); 
        END LOOP; 
 
        HTP.p ('</table>'); 

    END; 

--**********************

end "INVENTORY_REPORT_SONALI";
/

