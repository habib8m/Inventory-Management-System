
                                                  ===============================SPAC=============================
create or replace PACKAGE acc_reports 
AS 

    procedure Subsidiary_Ledger (P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE   DATE, P_APP_ORG_ID  NUMBER); 
    procedure Daily_Transaction (P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE   DATE,P_APP_ORG_ID NUMBER); 
    procedure All_Schedule_Report (P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE   DATE, p_org_id number default 0); 
    procedure Trial_Balance (P_PROJECT_CODE NUMBER,  P_FDATE DATE, P_TDATE DATE, V_ORG_ID NUMBER); 
    procedure Subsidary_Trial_Balance (P_PROJECT_CODE NUMBER, P_AC_CODE NUMBER, P_FDATE DATE, P_TDATE   DATE,P_ORG_ID NUMBER); 
    procedure Daily_Cash_Statement (p_company_name number ,p_from_date date, P_ORG_ID   NUMBER); 
    procedure balance_sheet (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE); 
    procedure Profit_Loss (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure Profit_Loss_4 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure Balance_Sheet_3s (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure Subsidiary_Ledger1 (P_PROJECT_CODE NUMBER, P_TRANS_CODE    NUMBER, P_FDATE DATE, P_TDATE   DATE, P_APP_ORG_ID  NUMBER); 
    procedure Balance_Sheet_3s2 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure balance_sheet_4 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    PROCEDURE Control_Head_Wise_Subsidiary_Balance(P_PROJECT_CODE    NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_ORG_ID NUMBER); 
    procedure balance_sheet_all (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure Subsidiary_Ledger_bogura (P_PROJECT_CODE NUMBER, P_TRANS_CODE    NUMBER, P_FDATE DATE, P_TDATE   DATE, P_APP_ORG_ID  NUMBER);
    procedure EXPENCESS (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number); 
    procedure Balance_Sheet_a (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) ;
    PROCEDURE job_wise_details_report_11 (P_PROJECT_CODE    NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER, P_JOB_ID NUMBER);
    PROCEDURE job_wise_summary_report_11 (P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER, P_JOB_ID NUMBER);
    PROCEDURE job_wise_profit_loss_11 (P_PROJECT_CODE    NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER, P_JOB_ID NUMBER) ;
    PROCEDURE job_wise_profit_loss_details_11(P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER, P_JOB_ID NUMBER);
    PROCEDURE job_wise_profit_loss_details2_11(P_PROJECT_CODE    NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER, P_JOB_ID NUMBER);
    procedure Subsidiary_Ledger_3s_cp (P_PROJECT_CODE NUMBER, P_TRANS_CODE    NUMBER, P_FDATE DATE, P_TDATE   DATE, P_APP_ORG_ID  NUMBER); 
 
end;
/


                                                  ===============================BODY=============================

create or replace PACKAGE BODY acc_reports 
AS 
   PROCEDURE Subsidiary_Ledger (P_PROJECT_CODE NUMBER, P_TRANS_CODE NUMBER, P_FDATE DATE, P_TDATE DATE, P_APP_ORG_ID NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES           VARCHAR2(4000) := ''; 
      V_DES_B         VARCHAR2(4000) := ''; 
      V_DES_FULL      VARCHAR2(4000) := ''; 
      V_CON           NUMBER  := 0;
 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 'Subsidiary Ledger'); 
      HTP.p ('<h5 style="margin-top: 0px; text-align: center">Date from '|| HTF.escape_sc (P_FDATE)|| ' to '|| HTF.escape_sc (P_TDATE)|| '</h5>'); 
                     
      FOR h IN (SELECT code_desc , code 
                    FROM G_ACC_CODES a 
                    WHERE P_CODE <> '0' 
                    AND P_CODE <> '-1' 
                    AND CODE = P_TRANS_CODE 
                    and org_id = P_APP_ORG_ID 
                    and CODE not in (select p_code FROM G_ACC_CODES WHERE ORG_ID = P_APP_ORG_ID))
 
      LOOP 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
           where m.org_id = P_APP_ORG_ID  
           and D.TRAN_ID = M.TRAN_ID 
           and m.delete_status != 1 
           AND D.TRANS_CODE = h.CODE 
           and project_code = nvl(P_PROJECT_CODE,project_code) 
           AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
           where tm.org_id = P_APP_ORG_ID 
           and TM.TRAN_ID = TD.TRAN_ID 
           and tm.delete_status != 1 
           and project_code = nvl(P_PROJECT_CODE,project_code) 
           AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
           AND TD.TRANS_CODE = h.code; 

         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Head of Accounts : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            HTP.p ('<table style="width:100%;font-size:12px;"> 
            <tr> 
            <th style="width: 15%">Date</th> 
            <th style="width: 10%">Voucher No.</th> 
            <th style="width: 61%">Description</th> 
            <th style="width: 2%">Debit</th> 
            <th style="width: 2%">Credit</th> 
            <th style="width: 10%">Balance</th> 
            </tr>'); 
         END IF; 
 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Opening Balance</b></td> 
                <td colspan="3" style="text-align: right">' 
               || HTF.escape_sc (V_OLD_BALANCE) 
               || '</td> 
                <tr>'); 
         END IF; 
 
         FOR i 
            IN (SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                         TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                    where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                    and project_code = nvl(P_PROJECT_CODE,project_code) 
                    AND TD.TRANS_CODE = h.code 
                   ORDER BY TM.TDATE, TM.TRAN_ID)
 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || replace(HTF.escape_sc (SUBSTR (i.V_NO, 5)) ,'611000','')
               || '</td>'); 
        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE) 
         LOOP 
            V_DES   := V_DES||','||MM.CODE_DESC; 
            -- V_DES   := V_DES||','; 
         END LOOP; 
         V_DES_FULL := i.DESCRIPTION||'-('||SUBSTR(V_DES,2)||')'; 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (SUBSTR(V_DES_FULL,1,LENGTH(V_DES_FULL)-3))--NVL(V_DES,V_DES_B)) 
               || '</td>'); 
        --  END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (TO_CHAR(V_BALANCE,'99,99,99,99,999.00')) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 
 
--*****************************

   PROCEDURE Daily_Transaction (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      v_date          DATE := SYSDATE + 1; 
      v_d             NUMBER := 0; 
      v_c             NUMBER := 0; 
      v_d1            NUMBER := 0; 
      v_c1            NUMBER := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Daily Transaction'); 
 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
      HTP.p ('<table style="width:100%; font-size: 12px"> 
            <tr> 
            <th style="width: 3%">SL NO#</th> 
            <th style="width: 6%">Voucher No.</th> 
            <th style="width: 26%">A/C Head</th> 
            <th >Description</th> 
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            </tr>'); 
 
      FOR i 
         IN (  SELECT TM.TDATE, 
                      TM.VOUCHER_NO, 
                      TD.TRANS_CODE, 
                      G.CODE_DESC, 
                      (SELECT CODE_DESC 
                         FROM G_ACC_CODES P 
                        where p.org_id = P_APP_ORG_ID  
                    and P.CODE = G.P_CODE) 
                         P_CODE_DESC, 
                      NVL (TD.TD_DESC, TM.TDESCRIPTION) TD_DESC, 
                      TD.CAMOUNT CAMOUNT, 
                      TD.DAMOUNT DAMOUNT 
                 FROM TMP_TRAN_M TM, TMP_TRAN_D TD, G_ACC_CODES G 
                where tm.org_id = P_APP_ORG_ID  
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                      AND TD.TRANS_CODE = G.CODE 
                      AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                      AND tm.project_code = 
                             NVL (P_PROJECT_CODE, tm.project_code) 
                      AND G.CODE = NVL (P_TRANS_CODE, G.CODE) 
             ORDER BY TDATE DESC, VOUCHER_NO DESC) 
      LOOP 
         v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
         v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
         v_d := v_d1; 
         v_c := v_c1; 
         v_sl := v_sl + 1; 
 
         SELECT SUM (D.DAMOUNT), SUM (D.CAMOUNT) 
           INTO v_d1, v_c1 
           FROM TMP_TRAN_M M, TMP_TRAN_D D 
          where m.org_id = P_APP_ORG_ID  
          and m.delete_status != 1 
                    and M.TRAN_ID = D.TRAN_ID AND TDATE = i.TDATE; 
 
         IF v_date != i.TDATE 
         THEN 
            IF v_sl > 1 
            THEN 
               HTP.p ( 
                     '<tr> 
                <td colspan="4" style="text-align: right"><b>Total</b></td> 
                <td style="text-align: right"><b>' 
                  || HTF.escape_sc (v_d) 
                  || '</b></td> 
                <td style="text-align: right"><b>' 
                  || HTF.escape_sc (v_c) 
                  || '</b></td> 
                </tr>'); 
            END IF; 
 
            HTP.p ( 
                  '<tr> 
                <td colspan="6" style="text-align: left"><b>Transaction Date ' 
               || HTF.escape_sc (i.TDATE) 
               || '</b></td> 
                </tr>'); 
         END IF; 
 
         HTP.p ( 
               '<tr> 
                <td style="text-align: center">' 
            || HTF.escape_sc (v_sl) 
            || '</td> 
                <td style="text-align: center">' 
            || HTF.escape_sc (SUBSTR (i.VOUCHER_NO, 5)) 
            || '</td> 
                <td style="text-align: Left">' 
            || HTF.escape_sc (i.CODE_DESC) 
            || '</td> 
                <td style="text-align: LEFT">' 
            || HTF.escape_sc (i.TD_DESC) 
            || '</td> 
                <td style="text-align: right">' 
            || HTF.escape_sc (NVL (i.DAMOUNT, 0)) 
            || '</td> 
                <td style="text-align: right">' 
            || HTF.escape_sc (NVL (i.CAMOUNT, 0)) 
            || '</td> 
                <tr>'); 
 
         v_date := i.TDATE; 
      END LOOP; 
 
      HTP.p ( 
            '<tr> 
                <td colspan="4" style="text-align: right"><b>Total</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (v_d) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (v_c) 
         || '</b></td> 
                </tr> 
                <tr> 
                <td colspan="4" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (v_damount_sum) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (v_camount_sum) 
         || '</b></td> 
                <tr>'); 
 
      HTP.p ('</table>'); 
 
      report_utils.footer; 
   END; 
 
--*********************************
 
   PROCEDURE All_Schedule_Report (P_PROJECT_CODE    NUMBER, 
                                  P_TRANS_CODE      NUMBER, 
                                  P_FDATE           DATE, 
                                  P_TDATE           DATE, 
                                  p_org_id number default 0) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      v_dm_o          NUMBER := 0; 
      v_cm_o          NUMBER := 0; 
      v_dm_c          NUMBER := 0; 
      v_cm_c          NUMBER := 0; 
      v_dm_o_s        NUMBER := 0; 
      v_cm_o_s        NUMBER := 0; 
      v_dm_c_s        NUMBER := 0; 
      v_cm_c_s        NUMBER := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'All Schedule Report'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
 
 
      FOR H IN (SELECT DISTINCT g.p_code, 
                                (SELECT ' ' || code_desc 
                                   FROM g_acc_codes e 
                                  where e.org_id = p_org_id  
                                and e.code = g.p_code) 
                                   Head_name 
                  FROM g_acc_codes g 
                 where g.org_id = p_org_id and g.P_CODE = P_TRANS_CODE) 
      LOOP 
         HTP.p ( 
               '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">CONTROL HEAD  : ' 
            || HTF.escape_sc (h.Head_name) 
            || '</h4>'); 
 
         HTP.p ( 
            '<table style="width:100%"> 
            <tr> 
            <th rowspan="2" style="width: 5%">SL No</th> 
            <th rowspan="2" style="width: 60px">A/C Name</th> 
            <th colspan="2" >Opening Balance</th> 
            <th colspan="2" >Transaction</th> 
            <th colspan="2" >Closing Balance</th> 
            </tr> 
            <tr> 
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            </tr>'); 
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         v_dm_o := 0; 
         v_cm_o := 0; 
         v_dm_c := 0; 
         v_cm_c := 0; 
 
 
 
         FOR i 
            IN (  SELECT TRANS_CODE, 
                         (SELECT CODE_DESC 
                            FROM G_ACC_CODES G 
                           where g.org_id = p_org_id  
                    and G.CODE = TRANS_CODE) 
                            CODE_DESC, 
                         SUM (OP_BALANCE) OP_BALANCE, 
                         SUM (CAMOUNT) CAMOUNT, 
                         SUM (DAMOUNT) DAMOUNT 
                    FROM (  SELECT --TM.PROJECT_CODE, 
                                   TD.TRANS_CODE, 
                                   SUM (NVL(TD.DAMOUNT,0) - NVL(TD.CAMOUNT,0)) OP_BALANCE, 
                                   0 CAMOUNT, 
                                   0 DAMOUNT 
                              FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                             where tm.org_id = p_org_id 
                             and tm.delete_status != 1 
                             AND TM.PROJECT_CODE = NVL(P_PROJECT_CODE,TM.PROJECT_CODE) 
                             and TM.TRAN_ID = TD.TRAN_ID 
                               AND TM.TDATE < P_FDATE 
                               AND TD.TRANS_CODE IN (SELECT code 
                                                       FROM g_acc_codes 
                                                      where org_id = p_org_id  
                                                        and p_code = h.p_code) 
                          GROUP BY TD.TRANS_CODE --,TM.PROJECT_CODE 
                          UNION ALL 
                            SELECT -- TM.PROJECT_CODE, 
                                   TD.TRANS_CODE, 
                                   0 OP_BALANCE, 
                                   SUM (TD.CAMOUNT) CAMOUNT, 
                                   SUM (TD.DAMOUNT) DAMOUNT 
                              FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                             where tm.org_id = p_org_id  
                                    and     TM.TRAN_ID = TD.TRAN_ID 
                                    and tm.delete_status != 1 
                                    AND TM.PROJECT_CODE = NVL(P_PROJECT_CODE,TM.PROJECT_CODE) 
                                   AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                                   AND TD.TRANS_CODE IN (SELECT code 
                                                           FROM g_acc_codes 
                                                          where org_id = p_org_id  
                                                            and p_code = h.p_code) 
                          GROUP BY TD.TRANS_CODE) 
                GROUP BY TRANS_CODE) 
         LOOP 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
 
            -- V_BALANCE       := V_BALANCE+nvl(I.BALANCE,0); 
            IF i.OP_BALANCE > 0 
            THEN 
               v_dm_o := i.OP_BALANCE; 
               v_cm_o := 0; 
               v_dm_o_s := v_dm_o_s + v_dm_o; 
            ELSE 
               v_cm_o := REPLACE (i.OP_BALANCE, '-', ''); 
               v_dm_o := 0; 
               v_cm_o_s := v_cm_o_s + v_cm_o; 
            END IF; 
 
            V_BALANCE := 
                 NVL (i.OP_BALANCE, 0) 
               + NVL (i.DAMOUNT, 0) 
               - NVL (i.CAMOUNT, 0); 
 
            IF V_BALANCE > 0 
            THEN 
               v_dm_c := V_BALANCE; 
               v_cm_c := 0; 
               v_dm_c_s := v_dm_c_s + V_BALANCE; 
            ELSE 
               v_cm_c := REPLACE (V_BALANCE, '-', ''); 
               v_dm_c := 0; 
               v_cm_c_s := v_cm_c_s - V_BALANCE; 
            END IF; 
 
            v_sl := v_sl + 1; 
 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (v_sl) 
               || '</td> 
                <td style="text-align: left">' 
               || HTF.escape_sc (I.CODE_DESC) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (v_dm_o) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (v_cm_o) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (v_dm_c) 
               || '</td> 
                <td style="text-align: right;">' 
               || HTF.escape_sc (v_cm_c) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
         HTP.p ( 
               '<tr> 
                <td colspan="2" style="text-align: right"><b>Total</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_dm_o_s) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_cm_o_s) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_damount_sum) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_camount_sum) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_dm_c_s) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_cm_c_s) 
            || '</b></td> 
                </tr> 
                <tr><td colspan="6" style="text-align: right"><b>Balance :</b></td> 
                <td colspan="2" style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_dm_c_s-v_cm_c_s,'99,99,99,999.99'))||'</b></td></tr>'); 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 

 
--**************************************

   PROCEDURE Trial_Balance (P_PROJECT_CODE    NUMBER, 
                            --P_TRANS_CODE      NUMBER, 
                            P_FDATE           DATE, 
                            P_TDATE           DATE, 
                            V_ORG_ID          NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 'Trial Balance'); 
 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date Range from : ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
      HTP.p ('<table style="width:100%"> 
            <tr> 
            <th style="width: 7%">SL NO</th> 
            <th >A/C Name</th> 
            <th style="width: 10%">Debit</th> 
            <th style="width: 10%">Credit</th> 
            </tr>'); 
 
    v_damount_sum := 0;
    v_camount_sum := 0;
    FOR I IN (select D.TRANS_CODE, code_desc, nvl(sum(DAMOUNT),0) DAMOUNT, nvl(sum(CAMOUNT),0) CAMOUNT, nvl(sum(DAMOUNT),0)-nvl(sum(CAMOUNT),0) amt 
                from tmp_tran_d D, tmp_tran_m M, g_acc_codes G 
                where D.TRAN_ID = M.TRAN_ID  
                and nvl(m.delete_status,0) != 1 
                AND D.TRANS_CODE = code 
                AND M.ORG_ID = V_ORG_ID 
                AND M.ORG_ID = V_ORG_ID 
                AND M.TDATE BETWEEN P_FDATE AND P_TDATE 
                group by D.TRANS_CODE, code_desc) 
    LOOP 
    if i.amt != 0 then 
         v_damount_sum := v_damount_sum + case when i.amt > 0 then i.amt else 0 end; 
         v_camount_sum := v_camount_sum + case when i.amt < 0 then i.amt else 0 end; 
 
         v_sl := v_sl + 1; 
         HTP.p ( 
               '<tr> 
                <td style="text-align: center">' 
            || HTF.escape_sc (v_sl) 
            || '</td> 
                <td style="text-align: LEFT">' 
            || HTF.escape_sc (i.CODE_DESC) 
            || '</td>'); 
        if i.amt > 0 then 
            htp.p('<td style="text-align: right">' 
            || HTF.escape_sc (NVL (i.amt, 0)) 
            || '</td><td style="text-align: right">0</td>'); 
        elsif i.amt < 0 then 
            htp.p('</td><td style="text-align: right">0</td> 
            <td style="text-align: right">' 
            || HTF.escape_sc (NVL (abs(i.amt), 0)) 
            || '</td>'); 
        end if; 
            htp.p('<tr>'); 
      end if; 
      END LOOP; 
 
      HTP.p ( 
            '<tr> 
                <td colspan="2" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (v_damount_sum) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (abs(v_camount_sum)) 
         || '</b></td> 
                <tr>'); 
 
      HTP.p ('</table>'); 
 
      report_utils.footer; 
   END; 
 
--************************************

   PROCEDURE Subsidary_Trial_Balance (P_PROJECT_CODE    NUMBER, 
                                      P_AC_CODE         NUMBER, 
                                      P_FDATE           DATE, 
                                      P_TDATE           DATE, 
                                      P_ORG_ID NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      v_tot_d         NUMBER := 0; 
      v_tot_c         NUMBER := 0; 
      v_d_bal         NUMBER := 0; 
      v_c_bal         NUMBER := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Subsidary Trial Balance'); 
 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date Range from : ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
      HTP.p (' 
            <style> 
            tr, td{ 
                border-bottom: none; 
                border-top: none; 
            } 
            </style> 
            <table style="width:100%"> 
            <tr> 
            <th >Description</th> 
            <th style="width: 10%">Debit</th> 
            <th style="width: 10%">Credit</th> 
            <th style="width: 10%">Debit Balance</th> 
            <th style="width: 10%">Credit Balance</th> 
            </tr>'); 

         v_sl := 0; 
 
         FOR i 
            IN (  SELECT tm.project_code, 
                         (SELECT nvl( code_desc,e.code) 
                            FROM g_acc_codes e 
                            where e.org_id = g.ORG_ID 
                            and e.code = g.p_code) SUB_HEAD, 
                         g.p_code, 
                         SUM (td.camount) camount, 
                         SUM (td.damount) damount, 
                         SUM (td.damount - td.camount) drbalance, 
                         SUM (td.camount - td.damount) crbalance 
                    FROM tmp_tran_m tm, tmp_tran_d td, g_acc_codes g 
                   where tm.org_id = P_ORG_ID  
                    and     tm.tran_id = td.tran_id 
                         AND tm.tdate BETWEEN p_fdate AND p_tdate 
                         and nvl(tm.delete_status,0) != 1 
                         AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                         AND td.trans_code = g.code 
                         --AND G.P_CODE = H.P_CODE 
                GROUP BY tm.project_code, 
                         g.p_code,g.ORG_ID 
                         order by g.p_code) 
         LOOP 
            v_sl := v_sl + 1; 
            v_tot_d := v_tot_d + case when NVL (i.drbalance, 0) > 0 then i.drbalance else 0 end; 
            v_tot_c := v_tot_c + case when NVL (i.crbalance, 0) > 0 then i.crbalance else 0 end; 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: LEFT">' 
               || HTF.escape_sc (nvl(i.SUB_HEAD,i.p_code)) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (case when NVL (i.drbalance, 0) > 0 then to_char(i.drbalance,'99,99,99,99,99,999.99') else '' end) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (case when NVL (i.crbalance, 0) > 0 then to_char(i.crbalance,'99,99,99,99,99,999.99') else '' end) 
               || '</td> 
                <td style="text-align: right"></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END LOOP; 
 
         V_BALANCE := v_tot_d - v_tot_c; 
 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: LEFT"></td> 
                <td style="text-align: right"></td> 
                <td style="text-align: right"></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(case when V_BALANCE > 0 then V_BALANCE end,'99,99,99,99,99,999.99')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               ||  HTF.escape_sc (to_char(case when V_BALANCE < 0 then abs(V_BALANCE) end,'99,99,99,99,99,999.99')) 
               || '</b></td> 
                <tr>'); 
 
      HTP.p ( 
            '<tr style="border: 1px solid black;"> 
                <td style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (to_char(v_tot_d,'99,99,99,99,99,999.99')) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (to_char(v_tot_c,'99,99,99,99,99,999.99')) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (to_char(case when V_BALANCE > 0 then (V_BALANCE) end,'99,99,99,99,99,999.99')) 
         || '</b></td> 
                <td style="text-align: right"><b>' 
         || HTF.escape_sc (to_char(case when V_BALANCE < 0 then abs(V_BALANCE) end,'99,99,99,99,99,999.99')) 
         || '</b></td> 
                <tr>'); 
 
      HTP.p ('</table>'); 
 
      report_utils.footer; 
   END;
 
--**********************************
 
 
        procedure Daily_Cash_Statement (p_company_name number ,p_from_date date, P_ORG_ID   NUMBER) 
        is 
        	v_sl number             := 0; 
            v_count         number  := 0; 
            V_OP            NUMBER  := 0; 
            V_P_CODE        NUMBER  := 0; 
            V_OPT            NUMBER := 0; 
            V_DEPT          NUMBER  := 0; 
            V_CR            NUMBER  := 0; 
            
 
 
        	BEGIN 
        		report_utils.header_without_boarder(p_company_name, 'Daily Cash Statement'); 
        		 
                   SELECT (SELECT sum(d.DAMOUNT) op 
							FROM TMP_TRAN_M M, TMP_TRAN_D d 
                            where PROJECT_CODE = NVL(p_company_name,PROJECT_CODE)  
                            and m.delete_status != 1 
                            -- and m.org_id = p_org_id  
                    and M.TRAN_ID = D.TRAN_ID 
                            AND TTYPE IN ('CR','BP') 
                            AND TDATE < sysdate) - 
                        (SELECT sum(d.CAMOUNT) op 
							FROM TMP_TRAN_M M, TMP_TRAN_D d 
                            where PROJECT_CODE = NVL(p_company_name,PROJECT_CODE) 
                            and m.delete_status != 1 
                    and M.TRAN_ID = D.TRAN_ID 
                            AND TTYPE IN ('CP','BR') 
                            AND TDATE < nvl(p_from_date,sysdate)) OP INTO V_OP FROM DUAL; 
        			 
        			htp.p('<table style="width:100%"> 
                            <tr> 
                                <th >Particulars</th> 
                    			<th  style="width:30%"  >Voucher Type & Desc.</th> 
                    			<th  style="width:10%">Voucher No</th>  
                    			<th  style="width:10%">Debit</th> 
                    			<th  style="width:10%">Credit</th> 
                            </tr> 
                            <tr> 
                                <td colspan="5" style="text-align: left"><b>'||htf.escape_sc(nvl(P_from_date,sysdate))||'<b></td> 
                            </tr>'); 
                        if V_OP > 0 then 
                            htp.p('<tr> 
                                <td style="text-align: left;"><b>To Opening Balance : <b></td> 
                                <td colspan="2"></td> 
                                <td style="text-align: right;"><b>'||htf.escape_sc(nvl(V_OP,0))||'</b></td> 
                                <td></td> 
                            </tr>'); 
                        else 
                            htp.p('<tr> 
                                <td style="text-align: left;">To Opening Balance : </td> 
                                <td></td> 
                                <td></td> 
                                <td></td> 
                                <td style="text-align: right"><b>'||htf.escape_sc(nvl(abs(V_OP),0))||'</b></td> 
                            </tr>'); 
                        end if; 
                    	v_sl        := 0; 
                         
 
 
                   FOR i in (SELECT M.TRAN_ID, SUBSTR(M.VOUCHER_NO,5) VCH_NO,  
									CASE M.TTYPE WHEN 'CR' THEN 'Cash Received' WHEN 'CP' THEN 'Cash Payment' END VCH_TYPE, 
									CASE M.TTYPE WHEN 'CR' THEN 1 WHEN 'CP' THEN 2 ELSE 3 END VCH, 
									(select sum(nvl(DAMOUNT,0)) from TMP_TRAN_D where TRAN_ID = M.TRAN_ID) DAMOUNT,  
									(select sum(nvl(CAMOUNT,0)) from TMP_TRAN_D where TRAN_ID = M.TRAN_ID) CAMOUNT 
							FROM TMP_TRAN_M M 
                            where PROJECT_CODE = NVL(p_company_name,PROJECT_CODE)  
                            AND M.TTYPE IN ('CR','CP') 
                            and m.delete_status != 1 
                            and m.org_id = P_ORG_ID 
                            and TDATE = nvl(p_from_date,sysdate)) 
        			LOOP 
        			v_sl                := v_sl+1; 
 
                    if i.VCH = 1 then 
 
                        for R in (select TRAN_ID, TRANS_CODE, TD_DESC, code_desc 
                                    from TMP_TRAN_D d, G_ACC_CODES a 
                                    where d.TRAN_ID = I.TRAN_ID  
                                    and TRANS_CODE = A.CODE  
                                    and d.delete_status != 1 
                                    and d.org_id = P_ORG_ID 
                                    order by TRANS_CODE desc) 
                        loop 
            SELECT P_CODE INTO V_P_CODE FROM G_ACC_CODES WHERE CODE = R.TRANS_CODE; 
                            IF V_P_CODE != P_ORG_ID||'005' THEN 
                             
                    V_DEPT := nvl(V_DEPT,0) + NVL(i.DAMOUNT,0); 
                				htp.p('<tr> 
                				<td style="text-align: LEFT">TO (<B>'||htf.escape_sc(R.code_desc)||'</B>)</td> 
                                <td style="text-align: center">'||htf.escape_sc(i.VCH_TYPE)||'</td> 
                				<td style="text-align: center;">'||htf.escape_sc(i.VCH_NO)||'</td> 
                				<td style="text-align: right;">'||htf.escape_sc(I.DAMOUNT)||'</td> 
                                <td style="text-align: center"></td> 
                				</tr> 
                                <tr> 
                                <td style="text-align: center"></td> 
                				<td style="text-align: center">'||htf.escape_sc(r.TD_DESC)||'.</td> 
                				<td style="text-align: left;"></td> 
                				<td style="text-align: left;"></td> 
                                <td style="text-align: center"></td> 
                				</tr>'); 
                            ELSE  
                                null; 
                				-- htp.p('<tr> 
                				-- <td style="text-align: LEFT">'||htf.escape_sc(R.TD_DESC)||'.</td> 
                                -- <td style="text-align: center"></td> 
                				-- <td style="text-align: left;"></td> 
                				-- <td style="text-align: left;"></td> 
                                -- <td style="text-align: center"></td> 
                				-- </tr>'); 
                            END IF; 
                            END LOOP; 
 
                    elsif i.VCH = 2 then 
                        for d in (select TRAN_ID, TRANS_CODE, TD_DESC, code_desc, DAMOUNT 
                                    from TMP_TRAN_D d, G_ACC_CODES a 
                                    where d.TRAN_ID = i.TRAN_ID 
                                    and TRANS_CODE = A.CODE 
                                    and d.delete_status != 1  
                                    and d.org_id = P_ORG_ID 
                                    order by TRANS_CODE) 
                        loop 
            SELECT P_CODE INTO V_P_CODE FROM G_ACC_CODES WHERE CODE = D.TRANS_CODE  
                                    and org_id = P_ORG_ID; 
                            IF V_P_CODE = P_ORG_ID||'005' THEN 
                             
                    V_CR :=V_CR + NVL(i.CAMOUNT ,0); 
                				htp.p('<tr> 
                				<td style="text-align: LEFT">BY (<B>'||htf.escape_sc(d.code_desc)||'</B>)</td> 
                                <td style="text-align: center">'||htf.escape_sc(i.VCH_TYPE)||'</td> 
                				<td style="text-align: center;">'||htf.escape_sc(i.VCH_NO)||'</td> 
                				<td style="text-align: left;"></td> 
                                <td style="text-align: right">'||htf.escape_sc(I.CAMOUNT)||'</td> 
                				</tr>'); 
                            ELSE  
                				htp.p('<tr> 
                				<td style="text-align: LEFT">'||htf.escape_sc(d.code_desc)||'</td> 
                                <td style="text-align: center">'||htf.escape_sc(D.DAMOUNT)||' Dr. - '||htf.escape_sc(D.TD_DESC)||'</td> 
                				<td style="text-align: left;"></td> 
                				<td style="text-align: left;"></td> 
                                <td style="text-align: center"></td> 
                				</tr>'); 
                            END IF; 
                        end loop;     
                    end if; 
        		null; 
                
        			END LOOP; 
                     htp.p('<tr> 
                             <td colspan="3" style="text-align: right;"><b>Total</b> :</td> 
                                <td style="text-align: right">'||htf.escape_sc(V_DEPT)||'</td> 
                				<td style="text-align: right;"> '||htf.escape_sc(V_CR)||'</td> 
                				 
                				</tr>'); 
                                 
                                -- <td style="text-align: center">'||htf.escape_sc(nvl(V_OP ,0) + V_DEPT)||'</td> -- for calculate opaning 
         
                    htp.p('</table>'); 
                 
        		report_utils.footer; 
               
                 
        	END; 
 
--*****************************************
 
        procedure balance_sheet (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE) 
        is 
        	v_sl number             := 0; 
            v_count         number  := 0; 
            V_OP            NUMBER  := 0; 
            
 
 
        	BEGIN 
        		report_utils.header_without_boarder(P_PROJECT_CODE, 'Balance Sheet'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center">As on '||htf.escape_sc(P_TO_DATE)||'</h4>'); 
        		 
                   
        			 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="border: none;">ASSET & PROPERTIES</th> 
                                <th style="border: none;">CAPITAL & LIABILITIES</th> 
                            </tr> 
                           </table>'); 
                            
                htp.p('<div style="width:49%; float: left;">');  
 
        			htp.p('<table style="width:100%"> 
                            <tr> 
                                <th >Particulars</th> 
                    			<th  style="width:15%"  >Amount</th> 
                            </tr>'); 
         
                    htp.p('</table>');       
 
         for i in (select CODE_DESC, sum(DAMOUNT) amt  
                        from TMP_TRAN_d d, g_acc_codes g 
                        where d.org_id = APEX_UTIL.FETCH_APP_ITEM('APP_ORG_ID')  
                    and d.TRANS_CODE = g.code 
                    and d.delete_status != 1 
                        and g.p_code in (3,5) 
                        having sum(DAMOUNT) > 0 
                        group by CODE_DESC ) 
 
         loop 
 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.CODE_DESC) 
               || '</td> 
                <td style="text-align: Left">' 
               || HTF.escape_sc (i.amt) 
               || '</td> 
                <tr>'); 
			end loop; 
 
             
                htp.p('</div>');  
                            
                htp.p('<div style="width:49%; float: left; margin-left: 2%;">');  
 
        			htp.p('<table style="width:100%"> 
                            <tr> 
                                <th >Particulars</th> 
                    			<th  style="width:15%"  >Amount</th> 
                            </tr>'); 
         
                    htp.p('</table>');       
 
         for i in (select CODE_DESC, sum(DAMOUNT) amt  
                        from TMP_TRAN_d d, g_acc_codes g 
                        where d.org_id = APEX_UTIL.FETCH_APP_ITEM('APP_ORG_ID')  
                    and d.TRANS_CODE = g.code 
                    and d.delete_status != 1 
                        and g.p_code in (3,5) 
                        having sum(DAMOUNT) > 0 
                        group by CODE_DESC ) 
 
         loop 
 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.CODE_DESC) 
               || '</td> 
                <td style="text-align: Left">' 
               || HTF.escape_sc (i.amt) 
               || '</td> 
                <tr>'); 
			end loop; 
 
             
                htp.p('</div>');  
                 
        		report_utils.footer; 
               
                 
        	END; 

--***********************************
 
        procedure Profit_Loss (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
            v_count         number  := 0; 
            V_TUR_D            NUMBER  := 0; 
            V_TUR_M            NUMBER  := 0; 
            V_SALES_COM            NUMBER  := 0; 
            V_SALES_RETURN            NUMBER  := 0; 
            V_cost_of_sales            NUMBER  := 0; 
            V_opening_stock            NUMBER  := 0; 
            V_purchasing            NUMBER  := 0; 
            V_closing_stock            NUMBER  := 0; 
            V_direct_exp            NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            V_Turnover          NUMBER  := 0; 
            V_Other_Income      NUMBER  := 0; 
            V_GROSS_PROFIT      NUMBER  := 0; 
            V_Operating_Expenses    NUMBER  := 0; 
            V_F_DATE            date; 
            V_T_DATE            date; 
        	BEGIN 
                    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE FROM ACC_FIN_YEAR WHERE ORG_ID = 7 AND STATUS = 1; 
	   HTP.p (' 
 
       <div style = "width: 60%; float: left; margin-left:20%;"> 
        <p style="text-align: center; font-size: 20px; margin-bottom: 0px;">3s Agro Services Ltd.</p><hr> 
		<p style="text-align: center; margin-bottom: 0px;">Plot 156, Block E, Level 10A, Kemal Ataturk Avenue,C/A, Dhaka 1213</p><hr> 
        <p style="text-align: center; font-size: 15px; margin-bottom: 0px; margin-top:2px;"><b></b></p> 
        </div> 
         
        <div style = "width: 20%; float: left;"><br> 
		<p style="text-align: right; font-size: 12px; margin-bottom: 0px;">Print Date :'||to_char(sysdate,'DD-MON-YYYY HH:MM AM')||'</p> 
        </div><br>'); 
        		-- report_utils.header_without_boarder(P_PROJECT_CODE, 'Profit & Loss'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center">Profit & Loss</h4> 
                    <h5 style="margin-top: 0px; text-align: center">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</h5>'); 
        		 
                    htp.p('<hr><table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;"><b>P a r t i c u l a r s</b></td> 
                                <td style="text-align: right;">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</td> 
                            </tr> 
                           </table><hr>'); 
                   
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>T r a d i n g A c c o u n t :</u></h5>'); 
                 
                select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1) into V_TUR_M from tmp_tran_d D, TMP_TRAN_M M 
                    where D.TRAN_ID = M.TRAN_ID 
                    AND TDATE <= P_TO_DATE 
                    AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005791); 
                select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1) INTO V_SALES_COM from tmp_tran_d D, TMP_TRAN_M M 
                        where D.TRAN_ID = M.TRAN_ID 
                        AND TDATE <= P_TO_DATE 
                        AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005810); 
                select (nvl(sum(damount),0))*(-1) INTO V_SALES_RETURN from tmp_tran_d D, TMP_TRAN_M M 
                        where D.TRAN_ID = M.TRAN_ID 
                        AND TDATE <= P_TO_DATE 
                        AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005791); -- 7005801 
                      V_Turnover    := V_TUR_M+V_SALES_COM+V_SALES_RETURN; 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Turnover</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Turnover,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                -- IF V_SALES_COM != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Sales Commission</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_SALES_COM,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                -- END IF; 
                -- IF V_SALES_RETURN != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Sales Return</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_SALES_RETURN,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                -- END IF; 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7005791) 
                loop 
                -- select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code = tur.code 
                --                 AND TDATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                    V_TUR_D := V_TUR_D*(-1); 
 
                    -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_TUR_D from tmp_tran_d 
                    --     where trans_code = tur.code; 
                    IF V_TUR_D != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
------- 1st level 
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_opening_stock 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    AND D.ORG_ID = 7 
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.DAMOUNT),0) -- -NVL(SUM(D.CAMOUNT),0)  
                    INTO V_purchasing 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    AND D.ORG_ID = 7 
                    AND TTYPE = 'PV' 
                    -- AND TRANS_CODE IN (select CODE from g_acc_codes where p_code = 7008) 
                    AND TDATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.DAMOUNT),0)-NVL(SUM(D.CAMOUNT),0) INTO V_SALES 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    AND D.ORG_ID = 7 
                    AND TTYPE = 'SV' 
                    AND TDATE <= P_TO_DATE; 
				V_closing_stock := V_opening_stock+V_purchasing-V_SALES; 
				V_cost_of_sales := V_opening_stock+V_purchasing-V_closing_stock; --V_opening_stock+V_purchasing-V_closing_stock+V_direct_exp; 
 
 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Cost of Sales:</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_cost_of_sales,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                IF V_opening_stock > 0 THEN		 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Opening Stock</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_opening_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                IF V_purchasing != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Add: Purchase Accounts</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_purchasing,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                IF V_closing_stock != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Less: Closing Stock</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_closing_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
                END IF; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_opening_stock+V_purchasing-V_closing_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
				-- V_direct_exp := 24694705.36; 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_direct_exp from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005826) 
                --                 AND TRAN_DATE <= P_TO_DATE; 
                    V_direct_exp := ACCOUNTS.GET_BALANCE(7005826,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_direct_exp := V_direct_exp+ACCOUNTS.GET_BALANCE(7005826,p_from_date,p_TO_date,  p_org_id); 
                                 
                IF V_direct_exp != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Direct Expense</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_direct_exp,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;Stock Adjustment</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(977676.47,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7005826 AND CODE != 7005829) 
                loop 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_TUR_D from ACC_BALANCE 
                --                 WHERE trans_code = tur.code 
                --                 AND TRAN_DATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
                -- htp.p('<tr style="border: none;"> 
                --                 <td style="text-align: left;"></td> 
                --                 <td style="border-bottom: 1px solid black;"></td> 
                --                 <td style="text-align: center;"></td> 
                --             </tr>'); 
				htp.p('</table>'); 
                V_GROSS_PROFIT  := V_Turnover-V_cost_of_sales; 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    G r o s s &nbsp;&nbsp; P r o f i t :</th> 
                                <th style="text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
				htp.p('</table>'); 
 
------ 3rd level 
 
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>I n c o m e &nbsp;&nbsp; S t a t e m e n t :</u></h5>'); 
                V_Other_Income := 0; 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_Other_Income from tmp_tran_d D, TMP_TRAN_M M 
                --     where D.TRAN_ID = M.TRAN_ID 
                --     AND TDATE <= P_TO_DATE 
                --     AND trans_code in (select code from g_acc_codes where org_id =7 and b_code = 7001); 
                    V_Other_Income := ACCOUNTS.GET_BALANCE(7001,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Other_Income := V_Other_Income+ACCOUNTS.GET_BALANCE(7001,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Other Income</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Other_Income,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7001) 
                loop 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code = tur.code 
                --                 AND TDATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT+V_Other_Income,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table>'); 
 
------ 4th level 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_Operating_Expenses from tmp_tran_d D, TMP_TRAN_M M 
                --     where D.TRAN_ID = M.TRAN_ID 
                --     AND TDATE <= P_TO_DATE 
                --     AND trans_code in (select code from g_acc_codes where org_id =7 and b_code = 7002); 
                    V_Operating_Expenses := ACCOUNTS.GET_BALANCE(7002,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Operating_Expenses := V_Operating_Expenses+ACCOUNTS.GET_BALANCE(7002,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Operating Expenses</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Operating_Expenses,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7002) 
                loop 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = tur.code) 
                --                 AND TDATE <= P_TO_DATE; 
                                 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    N e t t &nbsp;&nbsp; P r o f i t :</th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT+V_Other_Income-V_Operating_Expenses,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                           </table>'); 
 
 
        		-- report_utils.footer; 
               
                 
        	END; 

--*************************************
 
        procedure Profit_Loss_4 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
            v_count         number  := 0; 
            V_TUR_D            NUMBER  := 0; 
            V_TUR_M            NUMBER  := 0; 
            V_SALES_COM            NUMBER  := 0; 
            V_SALES_RETURN            NUMBER  := 0; 
            V_cost_of_sales            NUMBER  := 0; 
            V_opening_stock            NUMBER  := 0; 
            V_purchasing            NUMBER  := 0; 
            V_closing_stock            NUMBER  := 0; 
            V_direct_exp            NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            V_Turnover          NUMBER  := 0; 
            V_Other_Income      NUMBER  := 0; 
            V_GROSS_PROFIT      NUMBER  := 0; 
            V_Operating_Expenses    NUMBER  := 0; 
            V_F_DATE            date; 
            V_T_DATE            date; 
        	BEGIN 
                    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE FROM ACC_FIN_YEAR WHERE ORG_ID = 7 AND STATUS = 1; 
	   HTP.p (' 
 
       <div style = "width: 60%; float: left; margin-left:20%;"> 
        <p style="text-align: center; font-size: 20px; margin-bottom: 0px;">Bogura Jute Ltd.</p><hr> 
		<p style="text-align: center; margin-bottom: 0px;">Bogura, Dhaka, Bangladesh</p><hr> 
        <p style="text-align: center; font-size: 15px; margin-bottom: 0px; margin-top:2px;"><b></b></p> 
        </div> 
         
        <div style = "width: 20%; float: left;"><br> 
		<p style="text-align: right; font-size: 12px; margin-bottom: 0px;">Print Date :'||to_char(sysdate,'DD-MON-YYYY HH:MM AM')||'</p> 
        </div><br>'); 
        		-- report_utils.header_without_boarder(P_PROJECT_CODE, 'Profit & Loss'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center">Profit & Loss</h4> 
                    <h5 style="margin-top: 0px; text-align: center">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</h5>'); 
        		 
                    htp.p('<hr><table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;"><b>P a r t i c u l a r s</b></td> 
                                <td style="text-align: right;">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</td> 
                            </tr> 
                           </table><hr>'); 
                   
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>T r a d i n g A c c o u n t :</u></h5>'); 
                 
                select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1) into V_TUR_M from tmp_tran_d D, TMP_TRAN_M M 
                    where D.TRAN_ID = M.TRAN_ID 
                    AND TDATE <= P_TO_DATE 
                    AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005791); 
                select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1) INTO V_SALES_COM from tmp_tran_d D, TMP_TRAN_M M 
                        where D.TRAN_ID = M.TRAN_ID 
                        AND TDATE <= P_TO_DATE 
                        AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005810); 
                select (nvl(sum(damount),0))*(-1) INTO V_SALES_RETURN from tmp_tran_d D, TMP_TRAN_M M 
                        where D.TRAN_ID = M.TRAN_ID 
                        AND TDATE <= P_TO_DATE 
                        AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005791); -- 7005801 
                      V_Turnover    := V_TUR_M+V_SALES_COM+V_SALES_RETURN; 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Turnover</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Turnover,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                -- IF V_SALES_COM != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Sales Commission</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_SALES_COM,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                -- END IF; 
                -- IF V_SALES_RETURN != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Sales Return</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_SALES_RETURN,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                -- END IF; 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7005791) 
                loop 
                -- select (nvl(sum(damount),0)-nvl(sum(camount),0))*(-1)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code = tur.code 
                --                 AND TDATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                    V_TUR_D := V_TUR_D*(-1); 
 
                    -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_TUR_D from tmp_tran_d 
                    --     where trans_code = tur.code; 
                    IF V_TUR_D != 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
------- 1st level 
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_opening_stock 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    AND D.ORG_ID = 7 
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.DAMOUNT),0) -- -NVL(SUM(D.CAMOUNT),0)  
                    INTO V_purchasing 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    AND D.ORG_ID = 7 
                    AND TTYPE = 'PV' 
                    -- AND TRANS_CODE IN (select CODE from g_acc_codes where p_code = 7008) 
                    AND TDATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.DAMOUNT),0)-NVL(SUM(D.CAMOUNT),0) INTO V_SALES 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    AND D.ORG_ID = 7 
                    AND TTYPE = 'SV' 
                    AND TDATE <= P_TO_DATE; 
				V_closing_stock := V_opening_stock+V_purchasing-V_SALES; 
				V_cost_of_sales := V_opening_stock+V_purchasing-V_closing_stock; --V_opening_stock+V_purchasing-V_closing_stock+V_direct_exp; 
 
 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Cost of Sales:</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_cost_of_sales,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                IF V_opening_stock > 0 THEN		 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Opening Stock</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_opening_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                IF V_purchasing != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Add: Purchase Accounts</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_purchasing,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                IF V_closing_stock != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Less: Closing Stock</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_closing_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
                END IF; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_opening_stock+V_purchasing-V_closing_stock,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
				-- V_direct_exp := 24694705.36; 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_direct_exp from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005826) 
                --                 AND TRAN_DATE <= P_TO_DATE; 
                    V_direct_exp := ACCOUNTS.GET_BALANCE(7005826,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_direct_exp := V_direct_exp+ACCOUNTS.GET_BALANCE(7005826,p_from_date,p_TO_date,  p_org_id); 
                                 
                IF V_direct_exp != 0 THEN 
				htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"><b>Direct Expense</b></td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_direct_exp,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           ');	 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;Stock Adjustment</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(977676.47,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                END IF; 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7005826 AND CODE != 7005829) 
                loop 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_TUR_D from ACC_BALANCE 
                --                 WHERE trans_code = tur.code 
                --                 AND TRAN_DATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
                -- htp.p('<tr style="border: none;"> 
                --                 <td style="text-align: left;"></td> 
                --                 <td style="border-bottom: 1px solid black;"></td> 
                --                 <td style="text-align: center;"></td> 
                --             </tr>'); 
				htp.p('</table>'); 
                V_GROSS_PROFIT  := V_Turnover-V_cost_of_sales; 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    G r o s s &nbsp;&nbsp; P r o f i t :</th> 
                                <th style="text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
				htp.p('</table>'); 
 
------ 3rd level 
 
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>I n c o m e &nbsp;&nbsp; S t a t e m e n t :</u></h5>'); 
                V_Other_Income := 0; 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_Other_Income from tmp_tran_d D, TMP_TRAN_M M 
                --     where D.TRAN_ID = M.TRAN_ID 
                --     AND TDATE <= P_TO_DATE 
                --     AND trans_code in (select code from g_acc_codes where org_id =7 and b_code = 7001); 
                    V_Other_Income := ACCOUNTS.GET_BALANCE(7001,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Other_Income := V_Other_Income+ACCOUNTS.GET_BALANCE(7001,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Other Income</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Other_Income,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7001) 
                loop 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code = tur.code 
                --                 AND TDATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT+V_Other_Income,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table>'); 
 
------ 4th level 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0) into V_Operating_Expenses from tmp_tran_d D, TMP_TRAN_M M 
                --     where D.TRAN_ID = M.TRAN_ID 
                --     AND TDATE <= P_TO_DATE 
                --     AND trans_code in (select code from g_acc_codes where org_id =7 and b_code = 7002); 
                    V_Operating_Expenses := ACCOUNTS.GET_BALANCE(7002,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Operating_Expenses := V_Operating_Expenses+ACCOUNTS.GET_BALANCE(7002,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Operating Expenses</th> 
                                <th style="text-align: right;">'||htf.escape_sc(replace(to_char(V_Operating_Expenses,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7002) 
                loop 
                -- select nvl(sum(damount),0)-nvl(sum(camount),0)  into V_TUR_D from tmp_tran_d D, TMP_TRAN_M M 
                --                 WHERE D.TRAN_ID = M.TRAN_ID 
                --                 AND trans_code in (select code from g_acc_codes where org_id =7 and p_code = tur.code) 
                --                 AND TDATE <= P_TO_DATE; 
                                 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(replace(to_char(V_TUR_D,'99,99,99,999.00'),'-','(-) '))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    N e t t &nbsp;&nbsp; P r o f i t :</th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(replace(to_char(V_GROSS_PROFIT+V_Other_Income-V_Operating_Expenses,'99,99,99,999.00'),'-','(-) '))||'</th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                           </table>'); 
 
 
        		-- report_utils.footer; 
               
                 
        	END; 

--**************************************
 
        procedure Balance_Sheet_3s (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
            v_count         number  := 0; 
            V_TUR_D            NUMBER  := 0; 
            V_Shareholders_Equity            NUMBER  := 0; 
            V_SALES_COM            NUMBER  := 0; 
            V_SALES_RETURN            NUMBER  := 0; 
            V_cost_of_sales            NUMBER  := 0; 
            V_opening_stock            NUMBER  := 0; 
            V_purchasing            NUMBER  := 0; 
            V_closing_stock            NUMBER  := 0; 
            V_direct_exp            NUMBER  := 0; 
            V_Current_Liabilities   NUMBER  := 0; 
            V_Fixed_Assets          NUMBER  := 0; 
            V_Current_Assets        NUMBER  := 0; 
            V_TUR_M            NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            V_Turnover          NUMBER  := 0; 
            V_Other_Income      NUMBER  := 0; 
            V_GROSS_PROFIT      NUMBER  := 0; 
            V_Operating_Expenses    NUMBER  := 0; 
			V_PROFIT_LOS    NUMBER  := 0; 
            V_OPENING_BALANCE   NUMBER  := 0; 
            V_F_DATE    DATE; 
            V_T_DATE    DATE; 
        	BEGIN 
             
                    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE FROM ACC_FIN_YEAR WHERE ORG_ID = 7 AND STATUS = 1; 
	   HTP.p (' 
 
       <div style = "width: 60%; float: left; margin-left:20%;"> 
        <p style="text-align: center; font-size: 20px; margin-bottom: 0px;">3s Agro Services Ltd.</p><hr> 
		<p style="text-align: center; margin-bottom: 0px;">Plot 156, Block E, Level 10A, Kemal Ataturk Avenue,C/A, Dhaka 1213</p><hr> 
        <p style="text-align: center; font-size: 15px; margin-bottom: 0px; margin-top:2px;"><b></b></p> 
        </div> 
         
        <div style = "width: 20%; float: left;"><br> 
		<p style="text-align: right; font-size: 12px; margin-bottom: 0px;">Print Date :'||to_char(sysdate,'DD-MON-YYYY HH:MM AM')||'</p> 
        </div><br>'); 
         
                 htp.p('<h4 style="margin-top: 0px; text-align: center">Balance Sheet</h4> 
                    <h5 style="margin-top: 0px; text-align: center">as at '||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</h5>'); 
        		 
                    htp.p('<hr><table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;"><b></b></td> 
                                <td style="text-align: right;">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</td> 
                            </tr> 
                           </table><hr>'); 
                   
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>Sources of Funds :</u></h5>'); 
                 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_Shareholders_Equity from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7005783) 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                 
                    V_Shareholders_Equity := ACCOUNTS.GET_BALANCE(7005783,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Shareholders_Equity := V_Shareholders_Equity+ACCOUNTS.GET_BALANCE(7005783,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Shareholders Equity</th> 
                                <th style="text-align: right;">'|| 
                                --htf.escape_sc(to_char(V_Shareholders_Equity,'99,99,99,999.00')) 
                                CASE WHEN V_TUR_D > 0 THEN -- THIS MEANS DR BALANCE 
                                  '('||htf.escape_sc(to_char(V_Shareholders_Equity,'99,99,99,999.00'))||')' 
                                  ELSE htf.escape_sc(to_char(ABS(V_Shareholders_Equity),'99,99,99,999.00')) END||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7005783) 
                loop 
                    -- V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,TRUNC(p_from_date,'yyyy'),p_from_date-1,  p_org_id ); 
                    -- V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                /* select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_TUR_D from ACC_BALANCE 
                                WHERE trans_code = tur.code 
                                AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE;*/ 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Share Capital : '||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">' 
                                -- FOR LIBILITY DR BALANCE SHOULD SHOW WITHIN (BRACKET) 
                                -- BUT FOR ASSETS CR BALANCE SHOULD SHOW WITHIN (BRACKET) 
                               -- ||htf.escape_sc(to_char(ABS(V_TUR_D),'99,99,99,999.00')) 
                                ||CASE WHEN V_TUR_D > 0 THEN -- THIS MEANS DR BALANCE 
                                  '('||htf.escape_sc(to_char(V_TUR_D,'99,99,99,999.00'))||')' 
                                  ELSE htf.escape_sc(to_char(ABS(V_TUR_D),'99,99,99,999.00')) END 
                                ||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
------- 1st level 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_Current_Liabilities from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 700639) 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                 
                    V_Current_Liabilities := ACCOUNTS.GET_BALANCE(700639,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Current_Liabilities := V_Current_Liabilities+ACCOUNTS.GET_BALANCE(700639,p_from_date,p_TO_date,  p_org_id)*(-1); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Long Term Liability</th> 
                                <th style="text-align: right;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Current Liabilities</th> 
                                <th style="text-align: right;">'|| 
                                --htf.escape_sc(to_char(V_Current_Liabilities,'99,99,99,999.00')) 
                                CASE WHEN V_TUR_D < 0 THEN -- THIS MEANS DR BALANCE 
                                  htf.escape_sc(to_char(V_Current_Liabilities,'99,99,99,999.00')) 
                                  ELSE htf.escape_sc(REPLACE(to_char(V_Current_Liabilities,'99,99,99,999.00'),'-','(-)')) END||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 700639) 
                loop 
                -- select NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0) into V_TUR_D from ACC_BALANCE 
                --                 WHERE trans_code = tur.code 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id)*(-1); 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'|| 
                                --htf.escape_sc(to_char(V_TUR_D,'99,99,99,999.00')) 
                                CASE WHEN V_TUR_D < 0 THEN -- THIS MEANS DR BALANCE 
                                  htf.escape_sc(to_char(V_TUR_D,'99,99,99,999.00')) 
                                  ELSE htf.escape_sc(to_char(ABS(V_TUR_D),'99,99,99,999.00')) END||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
------- 2st level 
 
    V_PROFIT_LOS	:= Profit_Loss_fun (P_PROJECT_CODE , P_FROM_DATE,P_TO_DATE , p_org_id ); 
 
                -- select NVL(sum(Dr_amount),0)-NVL(sum(cr_amount),0) INTO V_OPENING_BALANCE from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and code = 7005789) 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                    V_OPENING_BALANCE := ACCOUNTS.GET_BALANCE(7005789,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_OPENING_BALANCE := V_OPENING_BALANCE+ACCOUNTS.GET_BALANCE(7005789,p_from_date,p_TO_date,  p_org_id); 
                    V_OPENING_BALANCE := V_OPENING_BALANCE*(-1); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Profit & Loss A/c</th> 
                                <th style="text-align: right;">'||htf.escape_sc(to_char(V_PROFIT_LOS+V_OPENING_BALANCE,'99,99,99,999.00'))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    -- V_TUR_D := 7005789; 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Opening Balance</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(to_char(V_OPENING_BALANCE,'99,99,99,999.00'))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">Current Period</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(V_PROFIT_LOS)||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    T o t a l</th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(V_Shareholders_Equity+V_Current_Liabilities+V_PROFIT_LOS+V_OPENING_BALANCE,'99,99,99,999.00'))||'</th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                           </table>'); 
 
------ 3rd level 
 
                 htp.p('<h4 style="margin-top: 0px; text-align: left"><u>Application of Funds:</u></h5>'); 
                -- V_Fixed_Assets := 0; 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_Fixed_Assets from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 7004567) 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                    V_Fixed_Assets := ACCOUNTS.GET_BALANCE(7004567,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Fixed_Assets := V_Fixed_Assets+ACCOUNTS.GET_BALANCE(7004567,p_from_date,p_TO_date,  p_org_id); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Fixed Assets</th> 
                                <th style="text-align: right;">'||htf.escape_sc(to_char(V_Fixed_Assets,'99,99,99,999.00'))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 7004567) 
                loop 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_TUR_D from ACC_BALANCE 
                --                 WHERE trans_code = tur.code 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(to_char(V_TUR_D,'99,99,99,999.00'))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
 
------ 4th level 
 
                -- select abs(NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0)) into V_Current_Assets from ACC_BALANCE 
                --     where trans_code in (select code from g_acc_codes where org_id =7 and p_code = 70049) 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                    V_Current_Assets := ACCOUNTS.GET_BALANCE(70049,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_Current_Assets := V_Current_Assets+ACCOUNTS.GET_BALANCE(70049,p_from_date,p_TO_date,  p_org_id); 
                     
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_opening_stock 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    AND D.ORG_ID = 7 
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(70075,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(70075,p_from_date,p_TO_date,  p_org_id); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(7006,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(7006,p_from_date,p_TO_date,  p_org_id); 
                    V_Current_Assets := V_Current_Assets+V_opening_stock+V_TUR_D; 
 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">Current Assets</th> 
                                <th style="text-align: right;">'||htf.escape_sc(to_char(V_Current_Assets,'99,99,99,999.00'))||'</th> 
                            </tr> 
                           </table> 
                           <table style="width:90%; margin: auto;"> 
                           <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>'); 
                    V_TUR_D := 0; 
                for tur in (select * from g_acc_codes where org_id =7 and p_code = 70049) 
                loop 
                -- select NVL(sum(dr_amount),0)-NVL(sum(cr_amount),0) into V_TUR_D from ACC_BALANCE 
                --                 WHERE trans_code = tur.code 
                --                 AND TRAN_DATE BETWEEN P_FROM_DATE AND P_TO_DATE; 
                if tur.code = 7005725 then 
                    V_TUR_D := ACCOUNTS.GET_BALANCE(70075,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(70075,p_from_date,p_TO_date,  p_org_id); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(7006,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(7006,p_from_date,p_TO_date,  p_org_id); 
                elsif tur.code = 7005686 then 
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_TUR_D 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    AND D.ORG_ID = 7 
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 
                else  
                    V_TUR_D := ACCOUNTS.GET_BALANCE(tur.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(tur.code,p_from_date,p_TO_date,  p_org_id); 
                end if; 
                    -- IF V_TUR_D > 0 THEN 
                    htp.p(' 
                            <tr style="border: none;"> 
                                <td style="text-align: left;">'||htf.escape_sc(tur.CODE_DESC)||'</td> 
                                <td style="text-align: RIGHT;">'||htf.escape_sc(to_char(V_TUR_D,'99,99,99,999.00'))||'</td> 
                                <td style="text-align: center;"></td> 
                            </tr> 
                           '); 
                    -- END IF; 
                end loop; 
				 
                htp.p('<tr style="border: none;"> 
                                <td style="text-align: left;"></td> 
                                <td style="border-bottom: 1px solid black;"></td> 
                                <td style="text-align: center;"></td> 
                            </tr>'); 
				htp.p('</table>'); 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                                    T o t a l</th> 
                                <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(V_Fixed_Assets+V_Current_Assets,'99,99,99,999.00'))||'</th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="text-align: left;"></th> 
                                <th style="text-align: right; border-top: 1px solid black;"></th> 
                            </tr> 
                           </table>'); 
 
 
        		-- report_utils.footer; 
               
                 
        	END;
 
--**********************************
 
   PROCEDURE Subsidiary_Ledger1 (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Subsidiary Ledger'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
 
    --   FOR h IN (SELECT CODE, CODE_DESC, ADDRESS 
    --               FROM v_acc_head 
    --              where org_id = p_org_id  
    --                 and CODE = NVL (P_TRANS_CODE, CODE)) 
                     
      FOR h IN (SELECT code_desc , code 
                      FROM G_ACC_CODES a 
                    WHERE P_CODE <> '0' 
                    AND P_CODE <> '-1' 
                    AND CODE = P_TRANS_CODE 
                    and org_id = P_APP_ORG_ID 
                    and CODE not in (select p_code FROM G_ACC_CODES WHERE ORG_ID = P_APP_ORG_ID)) 
      LOOP 
       
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
          where m.org_id = P_APP_ORG_ID  
                    and     D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                AND D.TRANS_CODE = h.CODE 
                AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.TRANS_CODE = h.code 
                --AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
-- v_count := 2; -- FOR SHOW ALL 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Head of Accounts : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            -- HTP.p ( 
            --       '<h5 style="margin-top: 0px;">Address : ' 
            --    || HTF.escape_sc (h.ADDRESS) 
            --    || '</h5>'); 
            HTP.p ('<table style="width:100%"> 
            <tr> 
            <th style="width: 10%">Date</th> 
            <th style="width: 8%">Voucher No.</th> 
            <th>Description</th> 
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            <th style="width: 7%">Balance</th> 
            </tr>'); 
         END IF; 
 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Opening Balance</b></td> 
                <td colspan="3" style="text-align: right">' 
               || HTF.escape_sc (V_OLD_BALANCE) 
               || '</td> 
                <tr>'); 
         END IF; 
 
         FOR i 
            IN (  SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                            TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         AND TD.TRANS_CODE = h.code 
                         --AND tm.project_code = 
                                --NVL (P_PROJECT_CODE, tm.project_code) 
                ORDER BY TM.TDATE, TM.TRAN_ID) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || HTF.escape_sc (SUBSTR (i.V_NO, 5)) 
               || '</td>'); 
         IF I.TTYPE_Level != 30 THEN 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (i.DESCRIPTION) 
               || '</td>'); 
         END IF; 
        --  IF I.TTYPE_Level = 30 THEN 
        --        htp.p(' <td style="text-align: Left">' 
        --        || HTF.escape_sc (i.DESCRIPTION) 
        --        || '</td>'); 
        --  END IF; 
        V_DES   := null; 
        V_DES_B   := null; 
         IF I.TTYPE_Level = 30 THEN 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            AND D.ORG_ID = 7 
			AND D.tran_id = I.TRAN_ID 
			and G.b_code != 7006) 
         LOOP 
            V_DES   := V_DES||','||MM.CODE_DESC; 
         END LOOP; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            AND D.ORG_ID = 7 
			AND D.tran_id = I.TRAN_ID 
			and G.b_code != 7006) 
         LOOP 
            V_DES_B   := V_DES_B||','||MM.CODE_DESC; 
         END LOOP; 
 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (i.DESCRIPTION||'-'||NVL(V_DES,V_DES_B)) 
               || '</td>'); 
         END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (TO_CHAR(V_BALANCE,'99,99,99,99,999.00')) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (v_damount_sum) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (v_camount_sum) 
               || '</b></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 
 
-- ************************************
-- roman fixing 20240328...

procedure Balance_Sheet_3s2 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
is 
--
v_assets_code number := 7003;
v_libility_code number := 7004;
v_amt number;
--
v_count         number  := 0; 
V_TUR_D            NUMBER  := 0; 
V_Shareholders_Equity            NUMBER  := 0; 
V_SALES_COM            NUMBER  := 0; 
V_SALES_RETURN            NUMBER  := 0; 
V_cost_of_sales            NUMBER  := 0; 
V_opening_stock            NUMBER  := 0; 
V_purchasing            NUMBER  := 0; 
V_closing_stock            NUMBER  := 0; 
V_direct_exp            NUMBER  := 0; 
V_Current_Liabilities   NUMBER  := 0; 
V_Fixed_Assets          NUMBER  := 0; 
V_Current_Assets        NUMBER  := 0; 
V_TUR_M            NUMBER  := 0; 
V_SALES             NUMBER  := 0; 
V_Turnover          NUMBER  := 0; 
V_Other_Income      NUMBER  := 0; 
V_GROSS_PROFIT      NUMBER  := 0; 
V_Operating_Expenses    NUMBER  := 0; 
V_PROFIT_LOS    NUMBER  := 0; 
V_OPENING_BALANCE   NUMBER  := 0; 
V_F_DATE    DATE; 
V_T_DATE    DATE; 
BEGIN 
    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE FROM ACC_FIN_YEAR WHERE ORG_ID = 7 AND STATUS = 1; 

    HTP.p ('<div style = "width: 60%; float: left; margin-left:20%;"> 
                <p style="text-align: center; font-size: 20px; margin-bottom: 0px;">3s Agro Services Ltd.</p><hr> 
                <p style="text-align: center; margin-bottom: 0px;">Plot 156, Block E, Level 10A, Kemal Ataturk Avenue,C/A, Dhaka 1213</p><hr> 
                <p style="text-align: center; font-size: 15px; margin-bottom: 0px; margin-top:2px;"><b></b></p> 
            </div> 
            <div style = "width: 20%; float: left;">
            <br> 
                <p style="text-align: right; font-size: 12px; margin-bottom: 0px;">Print Date :'||to_char(sysdate,'DD-MON-YYYY HH:MM AM')||'</p> 
            </div>
            <br>
            <h4 style="margin-top: 0px; text-align: center">Balance Sheet</h4> 
            <h5 style="margin-top: 0px; text-align: center">as at '||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</h5>
            <hr>
                <table style="width:100%; border: none;"> 
                    <tr style="border: none;"> 
                        <td style="text-align: left;"><b></b></td> 
                        <td style="text-align: right;">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</td> 
                    </tr> 
                </table>
            <hr>'); 

    for ast in (select * from g_acc_codes g where org_id =7 
                    and p_code = v_assets_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(ast.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">'||htf.escape_sc(ast.CODE_DESC)||'</th> 
                    <th style="text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</th> 
                </tr> 
               </table> 
               <table style="width:90%; margin: auto;"> 
                <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>
                <tr style="border: none;"> 
                    <td style="text-align: left;"></td> 
                    <td style="border-bottom: 1px solid black;"></td> 
                    <td style="text-align: center;"></td> 
                </tr>'); 

        for ast2 in (select * from g_acc_codes g where org_id =7 
                        and p_code = ast.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(ast2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border: none;"> 
                    <td style="text-align: left;">'||htf.escape_sc(ast2.CODE_DESC)||'</td> 
                    <td style="text-align: RIGHT; border-left: 1px solid black; border-right: 1px solid black;">' 
                    || htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</td> 
                    <td style="text-align: center;"></td> 
                   </tr>'); 
        end loop; 
        htp.p('<tr style="border: none;"> 
                <td style="text-align: left;"></td> 
                <td style="border-top: 1px solid black;"></td> 
                <td style="text-align: center;"></td> 
               </tr>
            </table>'); 
    end loop; 
    v_amt := ACCOUNTS.GET_BALANCE(v_assets_code,p_from_date,p_TO_date,p_org_id );
    htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Total Assets</th> 
                    <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(v_amt,'99,99,99,999.00'))||'</th> 
                </tr> 
                <tr style="border: none;"> 
                    <th style="text-align: left;"></th> 
                    <th style="text-align: right; border-top: 1px solid black;"></th> 
                </tr> 
                <tr style="border: none;"> 
                    <th style="text-align: left;"></th> 
                    <th style="text-align: right; border-top: 1px solid black;"></th> 
                </tr> 
            </table>'); 

    for lib in (select * from g_acc_codes g where org_id =7 
                    and p_code = v_libility_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(lib.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">'||htf.escape_sc(lib.CODE_DESC)||'</th> 
                    <th style="text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</th> 
                </tr> 
               </table> 
               <table style="width:90%; margin: auto;"> 
                <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>
                <tr style="border: none;"> 
                    <td style="text-align: left;"></td> 
                    <td style="border-bottom: 1px solid black;"></td> 
                    <td style="text-align: center;"></td> 
                </tr>'); 

        for lib2 in (select * from g_acc_codes g where org_id =7 
                        and p_code = lib.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(lib2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border: none;"> 
                    <td style="text-align: left;">'||htf.escape_sc(lib2.CODE_DESC)||'</td> 
                    <td style="text-align: RIGHT; border-left: 1px solid black; border-right: 1px solid black;">' 
                    || htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</td> 
                    <td style="text-align: center;"></td> 
                   </tr>'); 
        end loop; 
        htp.p('<tr style="border: none;"> 
                <td style="text-align: left;"></td> 
                <td style="border-top: 1px solid black;"></td> 
                <td style="text-align: center;"></td> 
               </tr>
            </table>'); 
    end loop;
htp.p('<tr style="border: none;"> 
<td style="text-align: left;"></td> 
<td style="border-top: 1px solid black;"></td> 
<td style="text-align: center;"></td> 
</tr>'); 
htp.p('</table>'); 
htp.p('<tr style="border: none;"> 
<td style="text-align: left;"></td> 
<td style="border-bottom: 1px solid black;"></td> 
<td style="text-align: center;"></td> 
</tr>'); 
htp.p('</table>');
v_amt := ACCOUNTS.GET_BALANCE(v_libility_code,p_from_date,p_TO_date,p_org_id ); 
htp.p('<table style="width:100%; border: none;"> 
<tr style="border: none;"> 
<th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Total Liability</th> 
<th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(abs(V_amt),'99,99,99,999.00'))||'</th> 
</tr> 
<tr style="border: none;"> 
<th style="text-align: left;"></th> 
<th style="text-align: right; border-top: 1px solid black;"></th> 
</tr> 
<tr style="border: none;"> 
<th style="text-align: left;"></th> 
<th style="text-align: right; border-top: 1px solid black;"></th> 
</tr> 
</table>'); 
-- report_utils.footer; 
END; 

--*************************************

        procedure balance_sheet_4 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
        	v_sl number             := 0; 
            V_opening_stock            NUMBER  := 0; 
            V_purchasing            NUMBER  := 0; 
            V_closing_stock            NUMBER  := 0; 
            V_direct_exp            NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            V_TUR_D             number  := 0; 
            V_F_DATE            date; 
            V_T_DATE            date; 
            profit_los          number  := 0; 
 
        	BEGIN 
        		report_utils.header_without_boarder(P_PROJECT_CODE, 'Manufacturing , Trading , Profit & Loss Accounts'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center"> 
                            For the Year Ended '||htf.escape_sc(to_char(P_TO_DATE,'dd Mon yyyy'))||'</h4>'); 
        		 
                    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE  
                    FROM ACC_FIN_YEAR  
                    WHERE ORG_ID = p_org_id
                    AND STATUS = 1 
                    AND PROJECT_CODE = p_org_id||'000101' 
                    ; 
                   
        			 
                    htp.p('<table style="width:100%; border: none;"> 
                            <tr style="border-top: 1px solid black;"> 
                                <th style="border: none; width:30%;"></th> 
                                <th style="border: none;  width:10%;"></th> 
                                <th style="border: none; text-align: right; width:10%;">$</th> 
                                <th style="border: none; border-left: 1px solid black;  width:30%;"></th> 
                                <th style="border: none; width:10%;"></th> 
                                <th style="border: none; text-align: right; width:10%;">$</th> 
                            </tr>'); 
 
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_opening_stock 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    and m.delete_status != 1 
                    AND D.ORG_ID = p_org_id
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 

                    
                -- select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_opening_stock 
                -- from acc_balance
                -- where org_id = p_org_id
                -- and trans_code = p_org_id||'007'
                -- -- AND TRAN_DATE <= p_TO_date;
                -- AND TRAN_DATE <= p_from_date;
 
                    SELECT NVL(SUM(D.TOTAL),0) -- -NVL(SUM(D.CAMOUNT),0)  
                    INTO V_purchasing 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    and m.delete_status != 1 
                    AND D.ORG_ID = p_org_id
                    AND TRANS_TYPE = 'PV' 
                    -- AND TRANS_CODE IN (select CODE from g_acc_codes where p_code = 7008) 
                    AND TRANS_DATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_SALES 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    and m.delete_status != 1 
                    AND D.ORG_ID = p_org_id
                    AND TRANS_TYPE = 'SV' 
                    -- AND TRANS_CODE IN (select CODE from g_acc_codes where p_code = 7008) 
                    AND TRANS_DATE <= P_TO_DATE; 
				V_closing_stock := V_opening_stock+V_purchasing-V_SALES; 
                V_closing_stock := 0; --need to calculate colosing stock    
                
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_closing_stock 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'007'
                AND TRAN_DATE <= p_TO_date;
                -- AND TRAN_DATE >= p_from_date;
                    -- V_direct_exp := ACCOUNTS.GET_BALANCE(p_org_id||'002',V_F_DATE,p_from_date-1,  p_org_id ); 
                    -- V_direct_exp := V_direct_exp+ACCOUNTS.GET_BALANCE(p_org_id||'002',p_from_date,p_TO_date,  p_org_id); 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_direct_exp 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'002'
                AND TRAN_DATE <= p_TO_date;
 
                    profit_los  := V_SALES+V_closing_stock - V_opening_stock-V_purchasing-V_direct_exp; 
 
 
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;">Opening Stock</td> 
                                <td style="border: none;"></th> 
                                <td style="border: none; text-align: right;">'||htf.escape_sc(V_opening_stock)||'</td> 
                                <td style="border: none; border-left: 1px solid black; text-align: left;">Sales</td> 
                                <td style="border: none;"></td> 
                                <td style="border: none; text-align: right;">'||htf.escape_sc(V_SALES)||'</td> 
                            </tr> 
                            <tr style="border: none;"> 
                                <td style="border: none; text-align: left;">Purchases</td> 
                                <td style="border: none;  text-align: right;">'||htf.escape_sc(V_purchasing)||'</td> 
                                <td style="border: none;"></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: left;">Closing Stock</td> 
                                <td style="border: none;"></td> 
                                <td style="border: none; text-align: right;">'||htf.escape_sc(V_closing_stock)||'</td> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-bottom: 1px solid black; text-align: right;">'||htf.escape_sc(V_opening_stock+V_purchasing)||'</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; "></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;">Expences :</th> 
                                <th style="border: none;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-left: 1px solid black; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none;"></th> 
                            </tr>'); 
 
                    for i in (SELECT * FROM g_acc_codes where org_id = p_org_id and p_code = p_org_id||'002') 
                    loop 
                    -- V_TUR_D := ACCOUNTS.GET_BALANCE(i.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    -- V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(i.code,p_from_date,p_TO_date,  p_org_id); 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_TUR_D 
                from acc_balance
                where org_id = p_org_id
                and trans_code = i.code
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;">'||htf.escape_sc(i.code_desc)||'</td> 
                                <td style="border: none; text-align: right; text-align: right;">'||htf.escape_sc(V_TUR_D)||'</td> 
                                <td style="border: none;"></td> 
                                <td style="border: none; border-left: 1px solid black;"></td> 
                                <td style="border: none;"></td> 
                                <td style="border: none;"></td> 
                            </tr>'); 
                    end loop; 
 
                    htp.p('<tr style="border: none;"> 
                                <th style="border: none; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-bottom: 1px solid black; text-align: right;">'||htf.escape_sc(V_direct_exp)||'</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;">Profit & loss :</th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-bottom: 1px solid black; text-align: right;">'||htf.escape_sc(profit_los)||'</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none;"></th> 
                            </tr> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-bottom: 1px solid black; text-align: right;">'||htf.escape_sc(V_SALES+V_closing_stock)||'</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: left;"></th> 
                                <th style="border: none;"></th> 
                                <th style="border: none; border-bottom: 1px solid black; text-align: right;">'||htf.escape_sc(V_SALES+V_closing_stock)||'</th> 
                            </tr>'); 
 
 
                    htp.p('</table>'); 
 
                            
                 
        		report_utils.footer; 
               
                 
        	END; 

--**********************************

    PROCEDURE Control_Head_Wise_Subsidiary_Balance(P_PROJECT_CODE    NUMBER, 
                                  P_TRANS_CODE      NUMBER, 
                                  P_FDATE           DATE, 
                                  P_TDATE           DATE, 
                                  P_ORG_ID      NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      v_dm_o          NUMBER := 0; 
      v_cm_o          NUMBER := 0; 
      v_dm_c          NUMBER := 0; 
      v_cm_c          NUMBER := 0; 
      v_dm_o_s        NUMBER := 0; 
      v_cm_o_s        NUMBER := 0; 
      v_dm_c_s        NUMBER := 0; 
      v_cm_c_s        NUMBER := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Control Head Wise Subsidiary Balance'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
 
 
      FOR H IN (SELECT DISTINCT g.p_code, 
                                (SELECT ' ' || code_desc 
                                   FROM g_acc_codes e 
                                  where e.org_id = p_org_id  
                                and e.code = g.p_code) 
                                   Head_name 
                  FROM g_acc_codes g 
                 where g.org_id = p_org_id and g.P_CODE = P_TRANS_CODE) 
      LOOP 
         HTP.p ( 
               '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">CONTROL HEAD  : ' 
            || HTF.escape_sc (h.Head_name) 
            || '</h4>'); 
 
         HTP.p ( 
            '<table style="width:100%"> 
            <tr> 
            <th rowspan="2" style="width: 5%">SL No</th> 
            <th rowspan="2" style="width: 60px">A/C Name</th>
            <th colspan="2" >Closing Balance</th> 
            </tr> 
            <tr>  
            <th style="width: 7%">Debit</th> 
            <th style="width: 7%">Credit</th> 
            </tr>'); 
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         v_dm_o := 0; 
         v_cm_o := 0; 
         v_dm_c := 0; 
         v_cm_c := 0; 
 
 
 
         FOR i 
            IN (  SELECT TRANS_CODE, 
                         (SELECT CODE_DESC 
                            FROM G_ACC_CODES G 
                           where g.org_id = p_org_id  
                            and G.CODE = TRANS_CODE
                            ) 
                            CODE_DESC, 
                         SUM (OP_BALANCE) OP_BALANCE, 
                         SUM (CAMOUNT) CAMOUNT, 
                         SUM (DAMOUNT) DAMOUNT 
                    FROM (  SELECT --TM.PROJECT_CODE, 
                                   TD.TRANS_CODE, 
                                   SUM (NVL(TD.DAMOUNT,0) - NVL(TD.CAMOUNT,0)) OP_BALANCE, 
                                   0 CAMOUNT, 
                                   0 DAMOUNT 
                              FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                             where tm.org_id = p_org_id 
                             and tm.delete_status != 1 
                             AND TM.PROJECT_CODE = NVL(P_PROJECT_CODE,TM.PROJECT_CODE) 
                             and TM.TRAN_ID = TD.TRAN_ID 
                               AND TM.TDATE < P_FDATE 
                               AND TD.TRANS_CODE IN (SELECT code 
                                                       FROM g_acc_codes 
                                                      where org_id = p_org_id  
                                                        and p_code = h.p_code) 
                          GROUP BY TD.TRANS_CODE --,TM.PROJECT_CODE 
                          UNION ALL 
                            SELECT -- TM.PROJECT_CODE, 
                                   TD.TRANS_CODE, 
                                   0 OP_BALANCE, 
                                   SUM (TD.CAMOUNT) CAMOUNT, 
                                   SUM (TD.DAMOUNT) DAMOUNT 
                              FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                             where tm.org_id = p_org_id  
                                    and     TM.TRAN_ID = TD.TRAN_ID 
                                    and tm.delete_status != 1 
                                    AND TM.PROJECT_CODE = NVL(P_PROJECT_CODE,TM.PROJECT_CODE) 
                                   AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                                   AND TD.TRANS_CODE IN (SELECT code 
                                                           FROM g_acc_codes 
                                                          where org_id = p_org_id  
                                                            and p_code = h.p_code) 
                          GROUP BY TD.TRANS_CODE) 
                GROUP BY TRANS_CODE
                ORDER BY CODE_DESC ) 
         LOOP 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
 
            -- V_BALANCE       := V_BALANCE+nvl(I.BALANCE,0); 
            IF i.OP_BALANCE > 0 
            THEN 
               v_dm_o := i.OP_BALANCE; 
               v_cm_o := 0; 
               v_dm_o_s := v_dm_o_s + v_dm_o; 
            ELSE 
               v_cm_o := REPLACE (i.OP_BALANCE, '-', ''); 
               v_dm_o := 0; 
               v_cm_o_s := v_cm_o_s + v_cm_o; 
            END IF; 
 
            V_BALANCE := 
                 NVL (i.OP_BALANCE, 0) 
               + NVL (i.DAMOUNT, 0) 
               - NVL (i.CAMOUNT, 0); 
 
            IF V_BALANCE > 0 
            THEN 
               v_dm_c := V_BALANCE; 
               v_cm_c := 0; 
               v_dm_c_s := v_dm_c_s + V_BALANCE; 
            ELSE 
               v_cm_c := REPLACE (V_BALANCE, '-', ''); 
               v_dm_c := 0; 
               v_cm_c_s := v_cm_c_s - V_BALANCE; 
            END IF;

 
            v_sl := v_sl + 1;
            if v_dm_c >= 1 or v_cm_c >= 1 then 
 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">'|| HTF.escape_sc (v_sl)||'</td> 
                <td style="text-align: left">'|| HTF.escape_sc (I.CODE_DESC)||'</td> 
                <td style="text-align: right;">'|| HTF.escape_sc (v_dm_c)||'</td> 
                <td style="text-align: right;">'|| HTF.escape_sc (v_cm_c)||'</td> 
                <tr>'); 
            end if;
         END LOOP; 
 
         HTP.p ( 
               '<tr> 
                <td colspan="2" style="text-align: right"><b>Total</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_dm_c_s) 
            || '</b></td> 
                <td style="text-align: right;"><b>' 
            || HTF.escape_sc (v_cm_c_s) 
            || '</b></td> 
                </tr> 
                <tr><td colspan="2" style="text-align: right"><b>Balance :</b></td> 
                <td colspan="2" style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_dm_c_s-v_cm_c_s,'99,99,99,99,99,99,99,999.99'))||'</b></td></tr>'); 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 

--**************************************

procedure balance_sheet_all (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
is 
	v_assets_code number := p_org_id||'003';
    v_libility_code number := p_org_id||'004';
    v_inc_code number := p_org_id||'001';
    v_exp_code number := p_org_id||'002';
    v_amt number;
    v_lib_amt number;
    v_ast_amt number;
    v_inc_amt number;
    v_exp_amt number;
    v_netprofit_amt number;
    V_F_DATE            date; 
    V_T_DATE            date;  
BEGIN 
	report_utils.header_without_boarder(P_PROJECT_CODE, 'Balance Sheet'); 
    htp.p('<h4 style="margin-top: 0px; text-align: center">For the Year Ended '||htf.escape_sc(to_char(P_TO_DATE,'dd Mon yyyy'))||'</h4>'); 
		 
    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE  
    FROM ACC_FIN_YEAR  
    WHERE ORG_ID = p_org_id  
    AND STATUS = 1 
    AND PROJECT_CODE = p_org_id||'000101' 
    ; 
    htp.p('<table style="width:100%; border:none;">
                <tr><th>ASSET & PROPERTIES</th><th>Amount</th><th>CAPITAL & LIABILITIES</th><th>Amount</th> </tr>
                <tr style="border:none;"><td colspan="2">');
    for ast in (select * from g_acc_codes g where org_id =p_org_id
                    and p_code = v_assets_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(ast.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border:none;"> 
                <tr style="border:none;"> 
                    <th style="border:none;width:20%; text-align: left;">'||htf.escape_sc(ast.CODE_DESC)||'</th> 
                    <th style="border:none;width:10%;"></th>
                    <th style="border:none;width:10%; text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,99,99,999.00'))||'</th> 
                </tr>'); 

        for ast2 in (select * from g_acc_codes g where org_id =p_org_id
                        and p_code = ast.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(ast2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border:none;"> 
                    <td style="border:none; padding-left: 15px; width:20%;text-align: left;">'||htf.escape_sc(ast2.CODE_DESC)||'</td> 
                    <td style="border:none; padding-left: 15px; width:10%;text-align: RIGHT;">'|| htf.escape_sc(to_char(ABS(v_amt),'99,99,99,99,99,999.00'))||'</td> 
                    <td style="border:none; padding-left: 15px; width:10%;text-align: center;"></td> 
                   </tr>'); 
        end loop; 
    end loop; 
    -- v_amt := ACCOUNTS.GET_BALANCE(v_assets_code,p_from_date,p_TO_date,p_org_id );
    -- htp.p('<tr style="border: none;"> 
    --                 <th style="border:none;width:10%;text-align: left;">Total Assets</th><th style="border:none;width:10%;"></th> 
    --                 <th style="border:none;width:10%;text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(v_amt,'99,99,99,999.00'))||'</th> 
    --             </tr></table>
    --     </td><td colspan="2">');
    htp.p('</table>
         </td><td colspan="2" style="vertical-align: top;">'); 

    for lib in (select * from g_acc_codes g where org_id =p_org_id
                    and p_code = v_libility_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(lib.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="border:none;width:30%;text-align: left;">'||htf.escape_sc(lib.CODE_DESC)||'</th> <th style="border:none;width:5%;"></th>  
                    <th style="border:none;width:10%;text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,99,99,999.00'))||'</th> 
                </tr>'); 
/*
        for lib2 in (select * from g_acc_codes g where org_id =p_org_id 
                        and p_code = lib.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(lib2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border: none;"> 
                    <td style="width:15%; text-align: left;">'||htf.escape_sc(lib2.CODE_DESC)||'</td> 
                    <td style="width:15%; text-align: RIGHT;">'|| htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</td> 
                    <td style="width:15%; text-align: center;"></td> 
                   </tr>'); 
        end loop; */
    end loop;
     v_exp_amt := ACCOUNTS.GET_BALANCE(v_exp_code,p_from_date,p_TO_date,p_org_id ); 
     v_inc_amt := ACCOUNTS.GET_BALANCE(v_inc_code,p_from_date,p_TO_date,p_org_id ); 
     v_netprofit_amt := abs(v_inc_amt)-abs(v_exp_amt);
    htp.p('<tr style="border: none;"> 
            <th style="border:none;width:20%; text-align: left;">Net Profit</th> <th style="border:none;width:10%;"></th> 
            <th style="border:none;width:10%; text-align: right; border-top: 1px solid black;">'
            ||case when v_inc_amt > 0 then htf.escape_sc(to_char((v_inc_amt),'99,99,99,999.00'))
              else '('||htf.escape_sc(to_char(abs(v_inc_amt),'99,99,99,99,99,999.00'))||')' end
            ||'</th> 
            </tr>');
  
    htp.p('</table>
         </td></tr>
         <tr><td>');
     v_lib_amt := ACCOUNTS.GET_BALANCE(v_libility_code,p_from_date,p_TO_date,p_org_id ); 
     --v_lib_amt := abs(v_lib_amt)+v_netprofit_amt; 
     v_ast_amt := ACCOUNTS.GET_BALANCE(v_assets_code,p_from_date,p_TO_date,p_org_id ); 
    htp.p('<tr> 
            <th style="width:35%;text-align: left;">Total Assets</th>
            <th style="width:10%;text-align: right; border: 1px solid black;">'||htf.escape_sc(to_char(v_ast_amt,'99,99,99,99,99,999.00'))||'</th> 
            <th style="width:35%; text-align: left;">Total Liability</th>
            <th style="width:10%; text-align: right; border: 1px solid black;">'||htf.escape_sc(to_char(abs(v_lib_amt),'99,99,99,99,99,999.00'))||'</th> 
            </tr></table>');          
    report_utils.footer;    
END; 

--*************************************
 
        procedure balance_sheet_all2 (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
        	v_sl number             := 0; 
            v_assets            number := 0;
            v_libility            number := 0;
            v_ch            number := 0;
            v_cb            number := 0;
            v_st            number := 0;
            V_TUR_D             number  := 0; 
            V_F_DATE            date; 
            V_T_DATE            date; 
            profit_los          number  := 0; 
            V_opening_stock            NUMBER  := 0; 
            V_purchasing            NUMBER  := 0; 
            V_closing_stock            NUMBER  := 0; 
            V_direct_exp            NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            
 
 
        	BEGIN 
        		report_utils.header_without_boarder(P_PROJECT_CODE, 'Balance Sheet'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center"> 
                            For the Year Ended '||htf.escape_sc(to_char(P_TO_DATE,'dd Mon yyyy'))||'</h4>'); 
        		 
                    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE  
                    FROM ACC_FIN_YEAR  
                    WHERE ORG_ID = p_org_id  
                    AND STATUS = 1 
                    AND PROJECT_CODE = p_org_id||'000101' 
                    ; 
                   
        			 
                    htp.p('<table style="width:50%; border: 1px solid black; float: left;"> 
                            <tr style="border: 1px solid black;"> 
                                <th style="border: none; width:40%;">Assets</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: right; width:10%;">$</th> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;"><u>Assets :</u></th> 
                                <th style="border: none; border-left: 1px solid black;"></th> 
                            </tr>');
                    for i in (SELECT * FROM g_acc_codes where org_id = p_org_id and p_code = p_org_id||'003') 
                    loop 
                    -- V_TUR_D := ACCOUNTS.GET_BALANCE(i.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    -- V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(i.code,p_from_date,p_TO_date,  p_org_id); 
                    
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_TUR_D 
                from acc_balance
                where org_id = p_org_id
                and trans_code = I.CODE
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;">'||htf.escape_sc(i.code_desc)||'</td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;">'||htf.escape_sc(V_TUR_D)||'</td>
                            </tr>'); 
                    end loop; 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO v_assets 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'003'
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"></td> 
                                <td style="border: none; border-left: 1px solid black; border-bottom: 1px solid black; text-align: right; text-align: right;"></td>
                            </tr>
                            <tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Total Assets</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_assets)||'</b></td>
                            </tr>'); 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO v_ch 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'005'
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Cash in Hand</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_ch)||'</b></td>
                            </tr>'); 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO v_cb 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'006'
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Cash at Bank</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_cb)||'</b></td>
                            </tr>'); 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO v_st 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'007'
                AND TRAN_DATE <= p_TO_date;
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Stock</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_st)||'</b></td>
                            </tr>'); 
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"></td> 
                                <td style="border: none; border-left: 1px solid black; border-bottom: 1px solid black; text-align: right; text-align: right;"></td>
                            </tr><tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Grand Total :</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_assets+v_ch+v_cb+v_st)||'</b></td>
                            </tr>'); 

                    htp.p('</table>'); 

-- libility part
 
                    SELECT NVL(SUM(D.TOTAL),0) INTO V_opening_stock 
                    FROM SP_STORE_D D, SP_STORE_M M 
                    WHERE D.TRANS_ID = M.TRANS_ID 
                    and m.delete_status != 1 
                    AND D.ORG_ID = p_org_id
                    AND TRANS_TYPE = 'OP' 
                    AND TRANS_DATE <= P_TO_DATE; 
 
                    SELECT NVL(SUM(D.DAMOUNT),0) -- -NVL(SUM(D.CAMOUNT),0)  
                    INTO V_purchasing 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                    AND D.ORG_ID = p_org_id
                    AND TTYPE = 'PV' 
                    -- AND TRANS_CODE IN (select CODE from g_acc_codes where p_code = 7008) 
                    AND TDATE <= P_TO_DATE; 
                     
                    SELECT NVL(SUM(D.DAMOUNT),0) INTO V_SALES 
                    FROM TMP_TRAN_D D, TMP_TRAN_M M 
                    WHERE D.TRAN_ID = M.TRAN_ID 
                    AND D.ORG_ID = p_org_id
                    and m.delete_status != 1 
                    AND TTYPE = 'SV' 
                    AND TDATE <= P_TO_DATE; 
				V_closing_stock := V_opening_stock+V_purchasing-V_SALES; 
                V_closing_stock := 0; --need to calculate colosing stock  
                
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_closing_stock 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'007'
                AND TRAN_DATE <= p_TO_date;
                    V_direct_exp := ACCOUNTS.GET_BALANCE(4002,V_F_DATE,p_from_date-1,  p_org_id ); 
                    V_direct_exp := V_direct_exp+ACCOUNTS.GET_BALANCE(4002,p_from_date,p_TO_date,  p_org_id); 
 
                    profit_los  := V_SALES+V_closing_stock - V_opening_stock-V_purchasing-V_direct_exp; 
                    profit_los  := profit_los*(-1);

                    ---main part

                    htp.p('<table style="width:50%; border: 1px solid black; float: left;"> 
                            <tr style="border: 1px solid black;"> 
                                <th style="border: none; width:40%;">Liabilites & Stockholders equity</th> 
                                <th style="border: none; border-left: 1px solid black; text-align: right; width:10%;">$</th> 
                            <tr style="border: none;"> 
                                <th style="border: none; text-align: left;"><u>Liabilites :</u></th> 
                                <th style="border: none; border-left: 1px solid black;"></th> 
                            </tr>');
                    for i in (SELECT * FROM g_acc_codes where org_id = p_org_id and p_code = p_org_id||'004') 
                    loop 
                    -- V_TUR_D := ACCOUNTS.GET_BALANCE(i.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    -- V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(i.code,p_from_date,p_TO_date,  p_org_id); 
                    
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO V_TUR_D 
                from acc_balance
                where org_id = p_org_id
                and trans_code = I.CODE
                AND TRAN_DATE <= p_TO_date;
                V_TUR_D := V_TUR_D*(-1);
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;">'||htf.escape_sc(i.code_desc)||'</td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;">'||htf.escape_sc(V_TUR_D)||'</td>
                            </tr>'); 
                    end loop; 
                select nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0) INTO v_libility 
                from acc_balance
                where org_id = p_org_id
                and trans_code = p_org_id||'004'
                AND TRAN_DATE <= p_TO_date;
                v_libility := v_assets*(-1);
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"></td> 
                                <td style="border: none; border-left: 1px solid black; border-bottom: 1px solid black; text-align: right; text-align: right;"></td>
                            </tr>
                            <tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Total Libilitis</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_assets)||'</b></td>
                            </tr>'); 
                            
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"></td> 
                                <td style="border: none; border-left: 1px solid black; border-bottom: 1px solid black; text-align: right; text-align: right;"></td>
                            </tr>
                            <tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Profit & loss</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(profit_los)||'</b></td>
                            </tr>'); 
                            
                    htp.p('<tr style="border: none;"> 
                                <td style="border: none; text-align: left;"></td> 
                                <td style="border: none; border-left: 1px solid black; border-bottom: 1px solid black; text-align: right; text-align: right;"></td>
                            </tr>
                            <tr style="border: none;"> 
                                <td style="border: none; text-align: left;"><b>Grand Total :</b></td> 
                                <td style="border: none; border-left: 1px solid black; text-align: right; text-align: right;"><b>'||htf.escape_sc(v_assets+profit_los)||'</b></td>
                            </tr>'); 

                    htp.p('</table>'); 
                            
                 
        		report_utils.footer; 
               
                 
        	END; 

--**********************************

PROCEDURE Subsidiary_Ledger_bogura (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Subsidiary Ledger'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
 
    --   FOR h IN (SELECT CODE, CODE_DESC, ADDRESS 
    --               FROM v_acc_head 
    --              where org_id = p_org_id  
    --                 and CODE = NVL (P_TRANS_CODE, CODE)) 
                     
      FOR h IN (SELECT code_desc , code 
                      FROM G_ACC_CODES a 
                    WHERE P_CODE <> '0' 
                    AND P_CODE <> '-1' 
                    AND CODE = P_TRANS_CODE 
                    and org_id = P_APP_ORG_ID 
                    and CODE not in (select p_code FROM G_ACC_CODES WHERE ORG_ID = P_APP_ORG_ID)) 
      LOOP 
       
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
          where m.org_id = P_APP_ORG_ID  
                    and     D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                AND D.TRANS_CODE = h.CODE 
                and project_code = nvl(P_PROJECT_CODE,project_code) 
                AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.TRANS_CODE = h.code 
                --AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
-- v_count := 2; -- FOR SHOW ALL 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Head of Accounts : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            -- HTP.p ( 
            --       '<h5 style="margin-top: 0px;">Address : ' 
            --    || HTF.escape_sc (h.ADDRESS) 
            --    || '</h5>'); 
            HTP.p ('<table style="width:100%;font-size:12px;"> 
            <tr> 
            <th style="width: 15%">Date</th> 
            <th style="width: 10%">Voucher No.</th> 
            <th style="width: 61%">Description</th> 
            <th style="width: 2%">Debit</th> 
            <th style="width: 2%">Credit</th> 
            <th style="width: 10%">Balance</th> 
            </tr>'); 
         END IF; 
 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Opening Balance</b></td> 
                <td colspan="3" style="text-align: right">' 
               || HTF.escape_sc (V_OLD_BALANCE) 
               || '</td> 
                <tr>'); 
         END IF; 
 
         FOR i 
            IN (  SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                            TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         AND TD.TRANS_CODE = h.code 
                         --AND tm.project_code = 
                                --NVL (P_PROJECT_CODE, tm.project_code) 
                ORDER BY TM.TDATE, TM.TRAN_ID) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || HTF.escape_sc (SUBSTR (i.V_NO, 5)) 
               || '</td>'); 
        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE) 
         LOOP 
            -- V_DES   := V_DES||','||MM.CODE_DESC; 
            V_DES   := V_DES||','; 
         END LOOP; 
         V_DES_FULL := i.DESCRIPTION;--||'-('||SUBSTR(V_DES,2)||')'; 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (V_DES_FULL)--NVL(V_DES,V_DES_B)) 
               || '</td>'); 
        --  END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (TO_CHAR(V_BALANCE,'99,99,99,99,999.00')) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 

--**********************************

        procedure EXPENCESS (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
        is 
        	v_sl                number  := 0; 
            V_opening_stock     NUMBER  := 0; 
            V_purchasing        NUMBER  := 0; 
            V_closing_stock     NUMBER  := 0; 
            V_direct_exp        NUMBER  := 0; 
            V_SALES             NUMBER  := 0; 
            V_TUR_D             number  := 0; 
            V_F_DATE            date; 
            V_T_DATE            date; 
            profit_los          number := 0;
            v_debit             number := 0;
            v_credit            number := 0;
            V_balance           number := 0; 
            v_debit_total       number := 0;
            v_credit_total      number := 0;
            v_balance_total     number := 0;
 
        	BEGIN 
        		report_utils.header_without_boarder(P_PROJECT_CODE, 'Expencess Report'); 
                 htp.p('<h4 style="margin-top: 0px; text-align: center"> 
                            Date From '||htf.escape_sc(p_from_date)||'To'||htf.escape_sc(p_to_date)||'</h4>'); 
                    htp.p('<table style="width:100%;">
                                <tr style="">
                                    <th>Head</th>
                                    <th>Debit</th>
                                    <th>Credit</th>
                                    <th>Balance</th>
                                 </tr>');
                      v_debit_total := 0;
                        v_credit_total := 0;
                        v_balance_total := 0;
                    for i in (SELECT * FROM g_acc_codes where org_id = p_org_id and p_code = p_org_id||'002'order by code) 
                    loop 
                    -- V_TUR_D := ACCOUNTS.GET_BALANCE(i.code,V_F_DATE,p_from_date-1,  p_org_id ); 
                    -- V_TUR_D := V_TUR_D+ACCOUNTS.GET_BALANCE(i.code,p_from_date,p_TO_date,  p_org_id); 
                            select nvl(SUM(DR_AMOUNT),0) ,nvl(SUM(CR_AMOUNT),0) ,nvl(SUM(DR_AMOUNT)-SUM(CR_AMOUNT),0)  
                            INTO v_debit,v_credit,V_balance 
                            from acc_balance
                            where org_id = p_org_id
                            and trans_code = i.code
                            AND TRAN_DATE between p_from_date and p_to_date;
                    htp.p('<tr> 
                            <td style=" text-align: left;">'||htf.escape_sc(i.code_desc)||'</td> 
                            <td style=" text-align: right;">'||htf.escape_sc(v_debit)||'</td> 
                            <td style=" text-align: right;">'||htf.escape_sc(v_credit)||'</td>
                            <td style=" text-align: right; text-align: right;">'||htf.escape_sc(V_balance)||'</td> 
                            </tr>'); 

                        v_debit_total := v_debit_total + v_debit;
                        v_credit_total := v_credit_total + v_credit;
                        v_balance_total := v_balance_total + v_balance;
                    end loop; 
                     htp.p('<tr> 
                            <td style=" text-align: right;"><b>Total: </b></td> 
                            <td style=" text-align: right;"><b>'||htf.escape_sc(v_debit_total)||' </b></td> 
                            <td style=" text-align: right;"><b>'||htf.escape_sc(v_credit_total)||'</b></td>
                            <td style=" text-align: right;"><b>'||htf.escape_sc(v_balance_total)||'</b></td> 
                            </tr>'); 
                    htp.p('</table>');
      report_utils.footer; 
   END; 

--*********************************

procedure Balance_Sheet_a (P_PROJECT_CODE    NUMBER, P_FROM_DATE DATE,P_TO_DATE DATE, p_org_id  number) 
is 
--
v_assets_code number := p_org_id||'003';
v_libility_code number := p_org_id||'004';
v_amt number;
--
v_count         number  := 0; 
V_TUR_D            NUMBER  := 0; 
V_Shareholders_Equity            NUMBER  := 0; 
V_SALES_COM            NUMBER  := 0; 
V_SALES_RETURN            NUMBER  := 0; 
V_cost_of_sales            NUMBER  := 0; 
V_opening_stock            NUMBER  := 0; 
V_purchasing            NUMBER  := 0; 
V_closing_stock            NUMBER  := 0; 
V_direct_exp            NUMBER  := 0; 
V_Current_Liabilities   NUMBER  := 0; 
V_Fixed_Assets          NUMBER  := 0; 
V_Current_Assets        NUMBER  := 0; 
V_TUR_M            NUMBER  := 0; 
V_SALES             NUMBER  := 0; 
V_Turnover          NUMBER  := 0; 
V_Other_Income      NUMBER  := 0; 
V_GROSS_PROFIT      NUMBER  := 0; 
V_Operating_Expenses    NUMBER  := 0; 
V_PROFIT_LOS    NUMBER  := 0; 
V_OPENING_BALANCE   NUMBER  := 0; 
V_F_DATE    DATE; 
V_T_DATE    DATE; 
BEGIN 
    SELECT FIN_FDATE, FIN_TDATE INTO V_F_DATE, V_T_DATE FROM ACC_FIN_YEAR WHERE ORG_ID = p_org_id AND STATUS = 1; 

    HTP.p ('<div style = "width: 60%; float: left; margin-left:20%;"> 
                <p style="text-align: center; font-size: 20px; margin-bottom: 0px;">3s Agro Services Ltd.</p><hr> 
                <p style="text-align: center; margin-bottom: 0px;">Plot 156, Block E, Level 10A, Kemal Ataturk Avenue,C/A, Dhaka 1213</p><hr> 
                <p style="text-align: center; font-size: 15px; margin-bottom: 0px; margin-top:2px;"><b></b></p> 
            </div> 
            <div style = "width: 20%; float: left;">
            <br> 
                <p style="text-align: right; font-size: 12px; margin-bottom: 0px;">Print Date :'||to_char(sysdate,'DD-MON-YYYY HH:MM AM')||'</p> 
            </div>
            <br>
            <h4 style="margin-top: 0px; text-align: center">Balance Sheet</h4> 
            <h5 style="margin-top: 0px; text-align: center">as at '||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</h5>
            <hr>
                <table style="width:100%; border: none;"> 
                    <tr style="border: none;"> 
                        <td style="text-align: left;"><b></b></td> 
                        <td style="text-align: right;">'||htf.escape_sc(P_FROM_DATE)||' To '||htf.escape_sc(P_TO_DATE)||'</td> 
                    </tr> 
                </table>
            <hr>'); 

    for ast in (select * from g_acc_codes g where org_id =p_org_id
                    and p_code = v_assets_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(ast.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">'||htf.escape_sc(ast.CODE_DESC)||'</th> 
                    <th style="text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</th> 
                </tr> 
               </table> 
               <table style="width:90%; margin: auto;"> 
                <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>
                <tr style="border: none;"> 
                    <td style="text-align: left;"></td> 
                    <td style="border-bottom: 1px solid black;"></td> 
                    <td style="text-align: center;"></td> 
                </tr>'); 

        for ast2 in (select * from g_acc_codes g where org_id =p_org_id
                        and p_code = ast.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(ast2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border: none;"> 
                    <td style="text-align: left;">'||htf.escape_sc(ast2.CODE_DESC)||'</td> 
                    <td style="text-align: RIGHT; border-left: 1px solid black; border-right: 1px solid black;">' 
                    || htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</td> 
                    <td style="text-align: center;"></td> 
                   </tr>'); 
        end loop; 
        htp.p('<tr style="border: none;"> 
                <td style="text-align: left;"></td> 
                <td style="border-top: 1px solid black;"></td> 
                <td style="text-align: center;"></td> 
               </tr>
            </table>'); 
    end loop; 
    v_amt := ACCOUNTS.GET_BALANCE(v_assets_code,p_from_date,p_TO_date,p_org_id );
    htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Total Assets</th> 
                    <th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(v_amt,'99,99,99,999.00'))||'</th> 
                </tr> 
                <tr style="border: none;"> 
                    <th style="text-align: left;"></th> 
                    <th style="text-align: right; border-top: 1px solid black;"></th> 
                </tr> 
                <tr style="border: none;"> 
                    <th style="text-align: left;"></th> 
                    <th style="text-align: right; border-top: 1px solid black;"></th> 
                </tr> 
            </table>'); 

    for lib in (select * from g_acc_codes g where org_id = p_org_id
                    and p_code = v_libility_code
                    and exists (select 1 from acc_balance where trans_code = g.code)
                    order by CODE_LEVEL
                   ) 
    loop 
        v_amt := ACCOUNTS.GET_BALANCE(lib.code,P_FROM_DATE,P_TO_DATE,p_org_id);

        htp.p('<table style="width:100%; border: none;"> 
                <tr style="border: none;"> 
                    <th style="text-align: left;">'||htf.escape_sc(lib.CODE_DESC)||'</th> 
                    <th style="text-align: right;">'||htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</th> 
                </tr> 
               </table> 
               <table style="width:90%; margin: auto;"> 
                <tr><th></th><th style="width:20%;"></th><th style="width:5%;"></th></tr>
                <tr style="border: none;"> 
                    <td style="text-align: left;"></td> 
                    <td style="border-bottom: 1px solid black;"></td> 
                    <td style="text-align: center;"></td> 
                </tr>'); 

        for lib2 in (select * from g_acc_codes g where org_id = p_org_id
                        and p_code = lib.code
                        and exists (select 1 from acc_balance where trans_code = g.code)
                        order by CODE_LEVEL
                       ) 
        loop 
            v_amt := ACCOUNTS.GET_BALANCE(lib2.code,p_from_date,p_TO_date,p_org_id );
            htp.p('<tr style="border: none;"> 
                    <td style="text-align: left;">'||htf.escape_sc(lib2.CODE_DESC)||'</td> 
                    <td style="text-align: RIGHT; border-left: 1px solid black; border-right: 1px solid black;">' 
                    || htf.escape_sc(to_char(ABS(v_amt),'99,99,99,999.00'))||'</td> 
                    <td style="text-align: center;"></td> 
                   </tr>'); 
        end loop; 
        htp.p('<tr style="border: none;"> 
                <td style="text-align: left;"></td> 
                <td style="border-top: 1px solid black;"></td> 
                <td style="text-align: center;"></td> 
               </tr>
            </table>'); 
    end loop;
htp.p('<tr style="border: none;"> 
<td style="text-align: left;"></td> 
<td style="border-top: 1px solid black;"></td> 
<td style="text-align: center;"></td> 
</tr>'); 
htp.p('</table>'); 
htp.p('<tr style="border: none;"> 
<td style="text-align: left;"></td> 
<td style="border-bottom: 1px solid black;"></td> 
<td style="text-align: center;"></td> 
</tr>'); 
htp.p('</table>');
v_amt := ACCOUNTS.GET_BALANCE(v_libility_code,p_from_date,p_TO_date,p_org_id ); 
htp.p('<table style="width:100%; border: none;"> 
<tr style="border: none;"> 
<th style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Total Liability</th> 
<th style="width:35%; text-align: right; border-top: 1px solid black;">'||htf.escape_sc(to_char(abs(V_amt),'99,99,99,999.00'))||'</th> 
</tr> 
<tr style="border: none;"> 
<th style="text-align: left;"></th> 
<th style="text-align: right; border-top: 1px solid black;"></th> 
</tr> 
<tr style="border: none;"> 
<th style="text-align: left;"></th> 
<th style="text-align: right; border-top: 1px solid black;"></th> 
</tr> 
</table>'); 
-- report_utils.footer; 
END; 

--*************************************

    PROCEDURE job_wise_details_report_11 (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER,
                                P_JOB_ID            NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Job Wise Details Report'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
 
    --   FOR h IN (SELECT CODE, CODE_DESC, ADDRESS 
    --               FROM v_acc_head 
    --              where org_id = p_org_id  
    --                 and CODE = NVL (P_TRANS_CODE, CODE)) 
                     
      FOR h IN (SELECT code_desc , code 
                      FROM G_ACC_CODES a 
                    WHERE P_CODE <> '0' 
                    AND P_CODE <> '-1' 
                    AND CODE = P_TRANS_CODE 
                    and org_id = P_APP_ORG_ID 
                    and CODE not in (select p_code FROM G_ACC_CODES WHERE ORG_ID = P_APP_ORG_ID)) 
      LOOP 
       
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
          where m.org_id = P_APP_ORG_ID  
                    and     D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                AND D.TRANS_CODE = h.CODE 
                and project_code = nvl(P_PROJECT_CODE,project_code)
                    and d.job_id = nvl(P_JOB_ID,d.job_id)
                    
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand  
                AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code)
                    and td.job_id = nvl(P_JOB_ID,td.job_id) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.TRANS_CODE = h.code 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                --AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
-- v_count := 2; -- FOR SHOW ALL 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Head of Accounts : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            -- HTP.p ( 
            --       '<h5 style="margin-top: 0px;">Address : ' 
            --    || HTF.escape_sc (h.ADDRESS) 
            --    || '</h5>'); 
            HTP.p ('<table style="width:100%;font-size:12px;"> 
            <tr> 
            <th style="width: 10%">Date</th> 
            <th style="width: 10%">Voucher No.</th> 
            <th style="width: 10%">Job Name</th> 
            <th style="width: 41%">Description</th> 
            <th style="width: 5%">Debit</th> 
            <th style="width: 5%">Credit</th> 
            </tr>'); 
         END IF; 
 
         FOR i 
            IN (  SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                            TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO,
                         (select code_desc from g_uni_codes where code = td.job_id) job_name, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         and td.job_id = nvl(P_JOB_ID,td.job_id)
                         AND TD.TRANS_CODE = h.code 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                         --AND tm.project_code = 
                                --NVL (P_PROJECT_CODE, tm.project_code) 
                ORDER BY TM.TDATE, TM.TRAN_ID) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || HTF.escape_sc (SUBSTR (i.V_NO, 5)) 
               || '</td>
                <td style="text-align: center">' 
               || HTF.escape_sc (i.job_name) 
               || '</td>'); 

        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE) 
         LOOP 
            -- V_DES   := V_DES||','||MM.CODE_DESC; 
            V_DES   := V_DES||','; 
         END LOOP; 
         V_DES_FULL := i.DESCRIPTION;--||'-('||SUBSTR(V_DES,2)||')'; 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (V_DES_FULL)--NVL(V_DES,V_DES_B)) 
               || '</td>'); 
        --  END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="4" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END;

--**********************************

   PROCEDURE job_wise_summary_report_11 (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER,
                                P_JOB_ID            NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Job Wise Summary Report'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
                     
      FOR h IN (SELECT code_desc , code 
                      FROM g_uni_codes a 
                    WHERE P_CODE = P_APP_ORG_ID||'00058' 
                    AND CODE = P_JOB_ID 
                    and org_id = P_APP_ORG_ID ) 
      LOOP 
       
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
          where m.org_id = P_APP_ORG_ID  
                    and     D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                AND D.job_id = h.CODE 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                and project_code = nvl(P_PROJECT_CODE,project_code)
                    -- and d.job_id = nvl(P_JOB_ID,d.job_id)  
                AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code)
                    -- and td.job_id = nvl(P_JOB_ID,td.job_id) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.job_id = h.code 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                --AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
-- v_count := 2; -- FOR SHOW ALL 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Job Name : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            HTP.p ('<table style="width:100%;font-size:12px;"> 
            <tr> 
            <th style="width: 10%">Date</th> 
            <th style="width: 10%">Voucher No.</th> 
            <th style="width: 15%">Accounts Head</th> 
            <th style="width: 35%">Description</th> 
            <th style="width: 5%">Debit</th> 
            <th style="width: 5%">Credit</th> 
            <th style="width: 8%">Balance</th> 
            </tr>'); 
         END IF; 
 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="4" style="text-align: right"><b>Opening Balance</b></td> 
                <td colspan="4" style="text-align: right">' 
               || HTF.escape_sc (V_OLD_BALANCE) 
               || '</td> 
                <tr>'); 
         END IF; 
 
         FOR i 
            IN (  SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                            TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO,
                         (select code_desc from g_acc_codes where code = td.trans_code) accounts_head, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         and td.job_id = P_JOB_ID
                         AND TD.job_id = h.code 
                        AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                         --AND tm.project_code = 
                                --NVL (P_PROJECT_CODE, tm.project_code) 
                ORDER BY TM.TDATE, TM.TRAN_ID) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || HTF.escape_sc (SUBSTR (i.V_NO, 5)) 
               || '</td>
                <td style="text-align: left">' 
               || HTF.escape_sc (i.accounts_head) 
               || '</td>'); 
        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE
            ) 
         LOOP 
            -- V_DES   := V_DES||','||MM.CODE_DESC; 
            V_DES   := V_DES||','; 
         END LOOP; 
         V_DES_FULL := i.DESCRIPTION;--||'-('||SUBSTR(V_DES,2)||')'; 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (V_DES_FULL)--NVL(V_DES,V_DES_B)) 
               || '</td>'); 
        --  END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (TO_CHAR(V_BALANCE,'99,99,99,99,999.00')) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="4" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END;

--******************************

   PROCEDURE job_wise_profit_loss_11 (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER,
                                P_JOB_ID            NUMBER) 
   IS 
      v_sl            NUMBER := 0;
      v_expense       NUMBER := 0; 
       v_income       NUMBER := 0; 
       v_profit   NUMBER :=  0; 
   BEGIN 
        report_utils.header_without_boarder (P_PROJECT_CODE, 'Job Wise Profit & Loss Summary'); 
         HTP.p ( '<h5 style="margin-top: 0px; text-align: center">Date from ' || HTF.escape_sc (P_FDATE) || ' to ' || HTF.escape_sc (P_TDATE) || '</h5>'); 
         v_sl := 0; 
        HTP.p ('<table style="width:60%;font-size:12px;margin:auto;"> 
                <tr>  
                    <th style="width: 2%">SL</th> 
                    <th style="width: 15%">Job Name</th>  
                    <th style="width: 5%">Expense</th> 
                    <th style="width: 5%">Income</th> 
                    <th style="width: 5%">Profit Or Loss</th> 
                </tr>');
              v_expense :=  0; 
               v_income := 0; 
               v_profit :=  0; 
         FOR i IN (  select D.JOB_ID,
                        (SELECT CODE_DESC FROM G_UNI_CODES WHERE CODE = JOB_ID) JOB_NAME,
                        sum(NVL(DAMOUNT,0)) EXPENSE,
                        SUM(NVL(CAMOUNT,0)) INCOME ,
                        sum(NVL(CAMOUNT,0)) - SUM(NVL(DAMOUNT,0)) PROFIT_LOSS
                    from TMP_TRAN_D D,TMP_TRAN_M M
                    WHERE D.TRAN_ID = M.TRAN_ID
                    and m.delete_status != 1
                    AND  M.ORG_ID = 11
                    AND JOB_ID IS NOT NULL
                    AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                    AND TDATE BETWEEN P_FDATE AND P_TDATE
                    GROUP BY JOB_ID) 
         LOOP 
            v_sl := v_sl + 1;
            v_expense :=  v_expense + i.expense; 
            v_income :=  v_income + i.income; 
            v_profit :=  v_profit + i.PROFIT_LOSS; 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">'|| HTF.escape_sc (v_sl)|| '</td> 
                <td style="text-align: left">'|| HTF.escape_sc (i.job_name)|| '</td>
                <td style="text-align: right">'|| HTF.escape_sc (TO_CHAR(i.expense,'99,99,99,99,99,999.00'))|| '</td>
                <td style="text-align: right">'|| HTF.escape_sc (TO_CHAR(i.INCOME,'99,99,99,99,99,999.00'))|| '</td>
                <td style="text-align: right">'|| HTF.escape_sc (TO_CHAR(i.PROFIT_LOSS,'99,99,99,99,99,999.00'))|| '</td>');
         END LOOP;
            HTP.p ('<tr> 
                        <td colspan="2" style="text-align: right"><b>Grand Total</b></td> 
                        <td style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_expense,'99,99,99,99,99,999.00'))||'</b></td> 
                        <td style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_income,'99,99,99,99,99,999.00'))||'</b></td> 
                        <td style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_profit,'99,99,99,99,99,999.00'))||'</b></td>  
                <tr>'); 
         HTP.p ('</table>');  
    --   report_utils.footer; 
   END;
 
--************************************

   PROCEDURE job_wise_profit_loss_details_11(P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER,
                                P_JOB_ID            NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE,'Job Wise Profit & Loss Details'); 
      HTP.p ( '<h5 style="margin-top: 0px; text-align: center">Date from ' || HTF.escape_sc (P_FDATE) || ' to ' || HTF.escape_sc (P_TDATE) || '</h5>');   
      FOR h IN (SELECT code_desc , code 
                      FROM g_uni_codes a 
                    WHERE P_CODE = P_APP_ORG_ID||'00058' 
                    AND CODE = P_JOB_ID 
                    and org_id = P_APP_ORG_ID ) 
      LOOP 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code)
                    -- and td.job_id = nvl(P_JOB_ID,td.job_id) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.job_id = h.code 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;margin-left:150px;">Job Name : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            HTP.p ('<table style="width:80%;margin:auto;"> 
                    <tr> 
                        <th style="width: 50%">Accounts Head</th> 
                        <th style="width: 10%">Expense</th> 
                        <th style="width: 10%">Income</th> 
                    </tr>'); 
         END IF; 
 
         FOR i 
            IN ( SELECT TD.TRANS_CODE, 
                         (select code_desc from g_acc_codes where code = td.trans_code) accounts_head, 
                         sum(NVL (TD.DAMOUNT, 0)) DAMOUNT, 
                         sum(NVL (TD.CAMOUNT, 0)) CAMOUNT, 
                         sum(NVL (TD.CAMOUNT, 0)) - sum(NVL (TD.DAMOUNT, 0)) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = 11 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    -- and job_id is not null
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         and td.job_id = P_JOB_ID
                         AND TD.job_id = h.code 
                        AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                         AND tm.project_code =  nvl(P_PROJECT_CODE, tm.project_code) 
                    GROUP BY TD.TRANS_CODE
                    ORDER BY td.trans_code) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE :=v_camount_sum - v_damount_sum; 
            HTP.p ( '<tr> 
                        <td style="text-align: left">' || HTF.escape_sc (i.accounts_head)  || '</td>'); 
        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			-- AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE
            ) 
         LOOP 
            -- V_DES   := V_DES||','||MM.CODE_DESC; 
            V_DES   := V_DES||','; 
         END LOOP; 
 
               htp.p('<td style="text-align: right">' || HTF.escape_sc (i.DAMOUNT) || '</td> 
                      <td style="text-align: right">'|| HTF.escape_sc (i.CAMOUNT)|| '</td>  
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( '<tr> 
                        <td colspan="1" style="text-align: right"><b>Grand Total</b></td> 
                        <td style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00'))|| '</b></td> 
                        <td style="text-align: right"><b>' || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00'))|| '</b></td> 
                    <tr>'); 
         END IF;  
         HTP.p ( '<tr> 
                        <td colspan="1" style="text-align: right"><b>Profit & Loss </b></td> 
                        <td colspan="2"style="text-align: right"><b>'|| HTF.escape_sc (to_char(V_BALANCE,'99,99,99,99,99,999.00'))|| '</b></td> 
                    <tr>');
 
         HTP.p ('</table>'); 
      END LOOP; 
 
    --   report_utils.footer; 
   END;

--**********************************

   PROCEDURE job_wise_profit_loss_details2_11(P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER,
                                P_JOB_ID            NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE,'Job Wise Profit & Loss Details'); 
      HTP.p ( '<h5 style="margin-top: 0px; text-align: center">Date from ' || HTF.escape_sc (P_FDATE) || ' to ' || HTF.escape_sc (P_TDATE) || '</h5>');   
      FOR h IN (SELECT code_desc , code 
                      FROM g_uni_codes a 
                    WHERE P_CODE = P_APP_ORG_ID||'00058' 
                    AND CODE = P_JOB_ID 
                    and org_id = P_APP_ORG_ID ) 
      LOOP 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code)
                    and td.job_id = nvl(P_JOB_ID,td.job_id) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.job_id = h.code 
                AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;margin-left:150px;">Job Name : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 
            HTP.p ('<table style="width:80%;margin:auto;"> 
                    <tr> 
                        <th style="width: 8%">Date</th> 
                        <th style="width: 15%">Accounts Head</th> 
                        <th style="width: 30%">Description</th> 
                        <th style="width: 10%">Expense</th> 
                        <th style="width: 10%">Income</th> 
                    </tr>'); 
         END IF; 
 
         FOR i IN ( SELECT tm.TDATE,
                        TD.TRANS_CODE,
                        TD.TD_DESC, 
                         (select code_desc from g_acc_codes where code = td.trans_code) accounts_head, 
                         sum(NVL (TD.DAMOUNT, 0)) DAMOUNT, 
                         sum(NVL (TD.CAMOUNT, 0)) CAMOUNT, 
                         sum(NVL (TD.CAMOUNT, 0)) - sum(NVL (TD.DAMOUNT, 0)) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = 11 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         and td.job_id = P_JOB_ID
                         AND TD.job_id = h.code 
                        AND TRANS_CODE <> 11001134 --hard codeed for cash in hand 
                         AND tm.project_code =  nvl(P_PROJECT_CODE, tm.project_code) 
                    GROUP BY TD.TRANS_CODE,tm.TDATE,TD.TD_DESC
                    ORDER BY td.trans_code) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE :=v_camount_sum - v_damount_sum; 
            HTP.p ( '<tr> 
                        <td style="text-align: left">' || HTF.escape_sc (i.TDATE)  || '</td>
                        <td style="text-align: left">' || HTF.escape_sc (i.accounts_head)  || '</td>
                        <td style="text-align: left">' || HTF.escape_sc (i.TD_DESC)  || '</td>'); 
        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			-- AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE
            ) 
         LOOP 
            -- V_DES   := V_DES||','||MM.CODE_DESC; 
            V_DES   := V_DES||','; 
         END LOOP; 
 
               htp.p('<td style="text-align: right">' || HTF.escape_sc (i.DAMOUNT) || '</td> 
                      <td style="text-align: right">'|| HTF.escape_sc (i.CAMOUNT)|| '</td>  
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( '<tr> 
                        <td colspan="3" style="text-align: right"><b>Grand Total</b></td> 
                        <td style="text-align: right"><b>'|| HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00'))|| '</b></td> 
                        <td style="text-align: right"><b>' || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00'))|| '</b></td> 
                    <tr>'); 
         END IF;  
         HTP.p ( '<tr> 
                        <td colspan="3" style="text-align: right"><b>Profit & Loss </b></td> 
                        <td colspan="2"style="text-align: right"><b>'|| HTF.escape_sc (to_char(V_BALANCE,'99,99,99,99,99,999.00'))|| '</b></td> 
                    <tr>');
 
         HTP.p ('</table>'); 
      END LOOP; 
 
    --   report_utils.footer; 
   END;

--********************************

   PROCEDURE Subsidiary_Ledger_3s_cp (P_PROJECT_CODE    NUMBER, 
                                P_TRANS_CODE      NUMBER, 
                                P_FDATE           DATE, 
                                P_TDATE           DATE, 
                                P_APP_ORG_ID      NUMBER) 
   IS 
      v_sl            NUMBER := 0; 
      v_count         NUMBER := 0; 
      v_damount_sum   NUMBER := 0; 
      v_camount_sum   NUMBER := 0; 
      V_BALANCE       NUMBER := 0; 
      V_OLD_BALANCE   NUMBER := 0; 
      V_DES             VARCHAR2(4000) := ''; 
      V_DES_B           VARCHAR2(4000) := ''; 
      V_DES_FULL           VARCHAR2(4000) := ''; 
      V_CON         NUMBER  := 0; 
   BEGIN 
      report_utils.header_without_boarder (P_PROJECT_CODE, 
                                           'Subsidiary Ledger'); 
      HTP.p ( 
            '<h5 style="margin-top: 0px; text-align: center">Date from ' 
         || HTF.escape_sc (P_FDATE) 
         || ' to ' 
         || HTF.escape_sc (P_TDATE) 
         || '</h5>'); 
                     
      FOR h IN (SELECT code_desc , code 
                      FROM G_ACC_CODES a 
                    WHERE P_CODE <> '0' 
                    AND P_CODE <> '-1' 
                    AND CODE = P_TRANS_CODE 
                    and org_id = P_APP_ORG_ID 
                    and CODE not in (select p_code FROM G_ACC_CODES WHERE ORG_ID = P_APP_ORG_ID)) 
      LOOP 
       
 
         v_sl := 0; 
         v_damount_sum := 0; 
         v_camount_sum := 0; 
         V_BALANCE := 0; 
         V_OLD_BALANCE := 0; 
 
         SELECT NVL (SUM (nvl(DAMOUNT,0)) - SUM (nvl(CAMOUNT,0)), 0) 
           INTO V_OLD_BALANCE 
           FROM TMP_TRAN_D D, TMP_TRAN_M M 
          where m.org_id = P_APP_ORG_ID  
                    and     D.TRAN_ID = M.TRAN_ID 
                    and m.delete_status != 1 
                AND D.TRANS_CODE = h.CODE 
                and project_code = nvl(P_PROJECT_CODE,project_code) 
                AND M.TDATE < P_FDATE; 
 
         V_BALANCE := V_OLD_BALANCE - V_BALANCE; 
 
         SELECT COUNT (*) 
           INTO v_count 
           FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
          where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                    and project_code = nvl(P_PROJECT_CODE,project_code) 
                AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                AND TD.TRANS_CODE = h.code 
                --AND tm.project_code = NVL (P_PROJECT_CODE, tm.project_code) 
                ; 
-- v_count := 2; -- FOR SHOW ALL 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<h4 style="margin-bottom: 0px; padding-bottom: 0px;">Head of Accounts : ' 
               || HTF.escape_sc (h.CODE_DESC) 
               || '</h4>'); 

            HTP.p ('<table style="width:100%;font-size:12px;"> 
            <tr> 
            <th style="width: 15%">Date</th> 
            <th style="width: 10%">Voucher No.</th> 
            <th style="width: 61%">Description</th> 
            <th style="width: 2%">Debit</th> 
            <th style="width: 2%">Credit</th> 
            <th style="width: 10%">Balance</th> 
            </tr>'); 
         END IF; 
 
         IF v_count > 0 or V_OLD_BALANCE != 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Opening Balance</b></td> 
                <td colspan="3" style="text-align: right">' 
               || HTF.escape_sc (V_OLD_BALANCE) 
               || '</td> 
                <tr>'); 
         END IF; 
 
         FOR i 
            IN (  SELECT TM.TRAN_ID, 
                         DECODE (TM.TTYPE, 
                                 'CR', 10, 
                                 'CP', 20, 
                                 'BR', 30, 
                                 'BP', 40, 
                                 'SV', 50, 
                                 'PV', 60, 
                                 70) 
                            TTYPE_Level, 
                         TM.TDATE TRANS_DATE, 
                         TD.TRANS_CODE, 
                         TD.TD_DESC DESCRIPTION, 
                         VOUCHER_NO V_NO, 
                         NVL (TD.DAMOUNT, 0) DAMOUNT, 
                         NVL (TD.CAMOUNT, 0) CAMOUNT, 
                         NVL (TD.DAMOUNT, 0) - NVL (TD.CAMOUNT, 0) BALANCE 
                    FROM TMP_TRAN_M TM, TMP_TRAN_D TD 
                   where tm.org_id = P_APP_ORG_ID 
                    and     TM.TRAN_ID = TD.TRAN_ID 
                    and tm.delete_status != 1 
                         AND TM.TDATE BETWEEN P_FDATE AND P_TDATE 
                         and project_code = nvl(P_PROJECT_CODE,project_code) 
                         AND TD.TRANS_CODE = h.code 
                        and AC_GROUP_HEAD is not null
                        and upper(TD_DESC) like 'CP%'
                         --AND tm.project_code = 
                                --NVL (P_PROJECT_CODE, tm.project_code) 
                ORDER BY TM.TDATE, TM.TRAN_ID) 
         LOOP 
            v_sl := v_sl + 1; 
            v_damount_sum := v_damount_sum + NVL (i.DAMOUNT, 0); 
            v_camount_sum := v_camount_sum + NVL (i.CAMOUNT, 0); 
            V_BALANCE := V_BALANCE + NVL (I.BALANCE, 0); 
            HTP.p ( 
                  '<tr> 
                <td style="text-align: center">' 
               || HTF.escape_sc (i.TRANS_DATE) 
               || '</td> 
                <td style="text-align: center">' 
               || replace(HTF.escape_sc (SUBSTR (i.V_NO, 5)) ,'611000','')
               || '</td>'); 

        V_DES   := null; 
        V_DES_B   := null; 
        --  IF I.TTYPE_Level = 30 THEN 
         V_CON  := 0; 
         FOR MM IN (select TRAN_ID, DAMOUNT, CAMOUNT, TRANS_CODE, TD_DESC, CODE_DESC  
			from tmp_tran_d D, G_ACC_CODES G 
			WHERE D.TRANS_CODE = G.CODE 
            and d.delete_status != 1 
            AND D.ORG_ID = P_APP_ORG_ID 
			AND D.tran_id = I.TRAN_ID 
            AND D.TRANS_CODE NOT IN P_TRANS_CODE) 
         LOOP 
            V_DES   := V_DES||','||MM.CODE_DESC; 
            -- V_DES   := V_DES||','; 
         END LOOP; 
         V_DES_FULL := i.DESCRIPTION||'-('||SUBSTR(V_DES,2)||')'; 
               htp.p(' <td style="text-align: Left">' 
               || HTF.escape_sc (SUBSTR(V_DES_FULL,1,LENGTH(V_DES_FULL)-3))--NVL(V_DES,V_DES_B)) 
               || '</td>'); 
        --  END IF; 
 
               htp.p('<td style="text-align: right">' 
               || HTF.escape_sc (i.DAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (i.CAMOUNT) 
               || '</td> 
                <td style="text-align: right">' 
               || HTF.escape_sc (TO_CHAR(V_BALANCE,'99,99,99,99,999.00')) 
               || '</td> 
                <tr>'); 
         END LOOP; 
 
 
         IF v_count > 0 
         THEN 
            HTP.p ( 
                  '<tr> 
                <td colspan="3" style="text-align: right"><b>Grand Total</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_damount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"><b>' 
               || HTF.escape_sc (to_char(v_camount_sum,'99,99,99,99,99,999.00')) 
               || '</b></td> 
                <td style="text-align: right"></td> 
                <tr>'); 
         END IF; 
 
         HTP.p ('</table>'); 
      END LOOP; 
 
      report_utils.footer; 
   END; 
 
-- *****************************

END;
/

