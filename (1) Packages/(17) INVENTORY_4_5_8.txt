
                                                  ===============================SPAC=============================

create or replace package "INVENTORY_4_5_8" as 
    procedure Item_Stock_Report(p_org_id number,p_company_id number,p_warehouse_code number,P_item_code NUMBER,p_from_date date, 
                            p_to_date date); 
end "INVENTORY_4_5_8"; 
/



                                                  ===============================BODY=============================

create or replace package body "INVENTORY_4_5_8" as 
    procedure Item_Stock_Report(p_org_id number,p_company_id number,p_warehouse_code number,P_item_code NUMBER,p_from_date date, 
                            p_to_date date) 
is 
	v_sl number := 0; 
    v_count number:=0; 
    v_Opening number:=0; 
    v_Purchase number:=0; 
    v_Issue number:=0; 
    v_Sales number:=0; 
    v_Return number:=0; 
    v_Transfer number:=0; 
    v_Receive number:=0; 
    v_Shortage number:=0; 
    v_Expired number:=0; 
    v_Damage number:=0; 
    v_FINISH_GOOD   NUMBER  :=0; 
    v_Balance number:=0; 
	BEGIN 
		report_utils.header_without_boarder(p_company_id, 'Item Stock Report '); 
            HTP.p ( 
                   '<h4 style="margin-top: 0px; text-align: center">Date From : ' 
                || HTF.escape_sc (P_from_date) 
                || ' To ' 
                || HTF.escape_sc (P_To_date) 
                || '</h4>'); 
 
			htp.p('<table style="width:100%"><tr> 
        			<th >Item Name</th> 
                    <th >Packing</th> 
                    <th >Unit</th> 
        			<th >Opening</th> 
        			<th >Finish<br>Goods</th> 
        			<th >Purchase</th>  
        			<th >Issue</th> 
        			<th >Sales</th> 
        			<th >Return</th> 
        			<th >Transfer</th> 
        			<th >Receive</th> 
        			<th >Shortage</th> 
        			<th >Expired</th> 
        			<th >Damage</th> 
        			<th >Balance</th> 
        			</tr>'); 
			 FOR i in ( select * 
                        from V_ITEM_3S vim 
                        where vim.code = nvl(P_item_code,vim.code) 
                        and org_id=p_org_id 
                        order by business_unit,ITEM_NAME,packing,unit 
                       ) 
			LOOP 
        		v_opening := PKG_INVENTORY.GET_ITEM_OPENING(p_org_id,i.CODE,p_from_date,p_warehouse_code); 

 IF v_opening < 1 THEN
                select nvl(sum(tr.qty),0) into v_opening from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('OP') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
END IF;
                select nvl(sum(tr.qty),0) into v_Purchase from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('PV') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
 
                select nvl(sum(tr.qty),0) into v_Issue from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('PI')--what is the ISSUE type?? 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
 
                select nvl(sum(tr.qty),0) into v_Sales from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('SV') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND nvl(WAREHOUSE_CODE,0) = nvl(NVL(p_warehouse_code,WAREHOUSE_CODE),0); 
                 
                select nvl(sum(tr.RETURN_QTY),0) into v_Return from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('SR')--what is the Return type??fixed 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
                 
                select nvl(sum(tr.qty),0) into v_Transfer from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('ST') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
                  
                select nvl(sum(tr.qty),0) into v_Receive from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('STR')--what is the Receive type??fixed 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
                 
                select nvl(sum(tr.qty),0) into v_Shortage from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('SH') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
                 
                select nvl(sum(tr.qty),0) into v_Expired from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('EXP') --what is the Expired type?? 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
                 
                select nvl(sum(tr.qty),0) into v_Damage from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('DM') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE); 
 
                select nvl(sum(tr.WEIGTH),0) into v_FINISH_GOOD from V_ITEM_TRANSACTION_ALL tr  
                where TR.item_code = i.code and tr.trans_type in ('FR') 
                and tr.TRANS_DATE between nvl(p_from_date,tr.TRANS_DATE) and nvl(p_to_date,sysdate) 
                AND WAREHOUSE_CODE = NVL(p_warehouse_code,WAREHOUSE_CODE)
                ; 
 
        		v_Balance := nvl(v_Balance,0)+nvl(v_opening,0)+nvl(v_FINISH_GOOD,0)+v_Purchase-v_Issue-nvl(v_Sales,0)+v_Return 
                            -v_Transfer+v_Receive-v_Shortage-v_Expired-v_Damage; 
         IF v_Balance != 0 THEN 
				htp.p('<tr> 
				<td style="text-align: LEFT">'||htf.escape_sc(i.ITEM_NAME)||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(i.packing)||'</td> 
                <td style="text-align: center;">'||htf.escape_sc(i.unit)||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_opening,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_FINISH_GOOD,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Purchase,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Issue,0))||'</td> 
                <td style="text-align: center;">'||htf.escape_sc(nvl(v_Sales,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Return,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Transfer,0))||'</td> 
                <td style="text-align: center;">'||htf.escape_sc(nvl(v_Receive,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Shortage,0))||'</td> 
                <td style="text-align: center;">'||htf.escape_sc(nvl(v_Expired,0))||'</td> 
				<td style="text-align: center;">'||htf.escape_sc(nvl(v_Damage,0))||'</td> 
                <td style="text-align: center;">'||htf.escape_sc(nvl(v_Balance,0))||'</td> 
				</tr>'); 
         END IF; 
	v_Balance   := 0; 
			END LOOP; 
 
                htp.p('</table>'); 
            
	END; 
end "INVENTORY_4_5_8";
/

